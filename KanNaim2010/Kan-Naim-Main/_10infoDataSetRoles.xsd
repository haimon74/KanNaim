<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="_10infoDataSetRoles" targetNamespace="http://tempuri.org/_10infoDataSetRoles.xsd" xmlns:mstns="http://tempuri.org/_10infoDataSetRoles.xsd" xmlns="http://tempuri.org/_10infoDataSetRoles.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="_10infoConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="_10infoConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Kan_Naim_Main.Properties.Settings.GlobalReference.Default._10infoConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Table_LookupRolesTableAdapter" GeneratorDataComponentClassName="Table_LookupRolesTableAdapter" Name="Table_LookupRoles" UserDataComponentName="Table_LookupRolesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="_10infoConnectionString (Settings)" DbObjectName="[10info].dbo.Table_LookupRoles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Table_LookupRoles] WHERE (([RoleId] = @Original_RoleId) AND ([RoleDescription] = @Original_RoleDescription))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoleDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Table_LookupRoles] ([RoleDescription]) VALUES (@RoleDescription);
SELECT RoleId, RoleDescription FROM Table_LookupRoles WHERE (RoleId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoleDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT RoleId, RoleDescription FROM dbo.Table_LookupRoles</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Table_LookupRoles] SET [RoleDescription] = @RoleDescription WHERE (([RoleId] = @Original_RoleId) AND ([RoleDescription] = @Original_RoleDescription));
SELECT RoleId, RoleDescription FROM Table_LookupRoles WHERE (RoleId = @RoleId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoleDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoleDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="RoleId" ColumnName="RoleId" DataSourceName="[10info].dbo.Table_LookupRoles" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RoleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="RoleId" DataSetColumn="RoleId" />
              <Mapping SourceColumn="RoleDescription" DataSetColumn="RoleDescription" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="_10infoDataSetRoles" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="_10infoDataSetRoles" msprop:Generator_DataSetName="_10infoDataSetRoles" msprop:EnableTableAdapterManager="True">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Table_LookupRoles" msprop:Generator_UserTableName="Table_LookupRoles" msprop:Generator_RowDeletedName="Table_LookupRolesRowDeleted" msprop:Generator_RowChangedName="Table_LookupRolesRowChanged" msprop:Generator_RowClassName="Table_LookupRolesRow" msprop:Generator_RowChangingName="Table_LookupRolesRowChanging" msprop:Generator_RowEvArgName="Table_LookupRolesRowChangeEvent" msprop:Generator_RowEvHandlerName="Table_LookupRolesRowChangeEventHandler" msprop:Generator_TableClassName="Table_LookupRolesDataTable" msprop:Generator_TableVarName="tableTable_LookupRoles" msprop:Generator_RowDeletingName="Table_LookupRolesRowDeleting" msprop:Generator_TablePropName="Table_LookupRoles">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="RoleId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="RoleId" msprop:Generator_ColumnPropNameInRow="RoleId" msprop:Generator_ColumnVarNameInTable="columnRoleId" msprop:Generator_ColumnPropNameInTable="RoleIdColumn" type="xs:int" />
              <xs:element name="RoleDescription" msprop:Generator_UserColumnName="RoleDescription" msprop:Generator_ColumnPropNameInRow="RoleDescription" msprop:Generator_ColumnVarNameInTable="columnRoleDescription" msprop:Generator_ColumnPropNameInTable="RoleDescriptionColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Table_LookupRoles" />
      <xs:field xpath="mstns:RoleId" />
    </xs:unique>
  </xs:element>
</xs:schema>