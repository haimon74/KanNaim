<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="_10infoDataSetLookupIndex" targetNamespace="http://tempuri.org/_10infoDataSetLookupIndex.xsd" xmlns:mstns="http://tempuri.org/_10infoDataSetLookupIndex.xsd" xmlns="http://tempuri.org/_10infoDataSetLookupIndex.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="_10infoConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="_10infoConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Kan_Naim_Main.Properties.Settings.GlobalReference.Default._10infoConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Table_LookupIndexesTableAdapter" GeneratorDataComponentClassName="Table_LookupIndexesTableAdapter" Name="Table_LookupIndexes" UserDataComponentName="Table_LookupIndexesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="_10infoConnectionString (Settings)" DbObjectName="[10info].dbo.Table_LookupIndexes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Table_LookupIndexes] WHERE (([Id] = @Original_Id) AND ([IndexName] = @Original_IndexName) AND ([GroupNameId] = @Original_GroupNameId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_IndexName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="IndexName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupNameId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupNameId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Table_LookupIndexes] ([Id], [IndexName], [GroupNameId]) VALUES (@Id, @IndexName, @GroupNameId);
SELECT Id, IndexName, GroupNameId FROM Table_LookupIndexes WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@IndexName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="IndexName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupNameId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupNameId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, IndexName, GroupNameId FROM dbo.Table_LookupIndexes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Table_LookupIndexes] SET [Id] = @Id, [IndexName] = @IndexName, [GroupNameId] = @GroupNameId WHERE (([Id] = @Original_Id) AND ([IndexName] = @Original_IndexName) AND ([GroupNameId] = @Original_GroupNameId));
SELECT Id, IndexName, GroupNameId FROM Table_LookupIndexes WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@IndexName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="IndexName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupNameId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupNameId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_IndexName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="IndexName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupNameId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupNameId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="IndexName" DataSetColumn="IndexName" />
              <Mapping SourceColumn="GroupNameId" DataSetColumn="GroupNameId" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="_10infoDataSetLookupIndex" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_DataSetName="_10infoDataSetLookupIndex" msprop:Generator_UserDSName="_10infoDataSetLookupIndex" msprop:EnableTableAdapterManager="True">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Table_LookupIndexes" msprop:Generator_UserTableName="Table_LookupIndexes" msprop:Generator_RowDeletedName="Table_LookupIndexesRowDeleted" msprop:Generator_TableClassName="Table_LookupIndexesDataTable" msprop:Generator_RowChangedName="Table_LookupIndexesRowChanged" msprop:Generator_RowClassName="Table_LookupIndexesRow" msprop:Generator_RowChangingName="Table_LookupIndexesRowChanging" msprop:Generator_RowEvArgName="Table_LookupIndexesRowChangeEvent" msprop:Generator_RowEvHandlerName="Table_LookupIndexesRowChangeEventHandler" msprop:Generator_TablePropName="Table_LookupIndexes" msprop:Generator_TableVarName="tableTable_LookupIndexes" msprop:Generator_RowDeletingName="Table_LookupIndexesRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msprop:Generator_UserColumnName="Id" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInTable="IdColumn" type="xs:int" />
              <xs:element name="IndexName" msprop:Generator_UserColumnName="IndexName" msprop:Generator_ColumnPropNameInRow="IndexName" msprop:Generator_ColumnVarNameInTable="columnIndexName" msprop:Generator_ColumnPropNameInTable="IndexNameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GroupNameId" msprop:Generator_UserColumnName="GroupNameId" msprop:Generator_ColumnPropNameInRow="GroupNameId" msprop:Generator_ColumnVarNameInTable="columnGroupNameId" msprop:Generator_ColumnPropNameInTable="GroupNameIdColumn" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Table_LookupIndexes" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
</xs:schema>