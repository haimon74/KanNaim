#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kan_Naim_Main
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Kan-Naim")]
	public partial class DataClassesEditArticleDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTable_LookupArticleStatus(Table_LookupArticleStatus instance);
    partial void UpdateTable_LookupArticleStatus(Table_LookupArticleStatus instance);
    partial void DeleteTable_LookupArticleStatus(Table_LookupArticleStatus instance);
    partial void InsertTable_LookupCategory(Table_LookupCategory instance);
    partial void UpdateTable_LookupCategory(Table_LookupCategory instance);
    partial void DeleteTable_LookupCategory(Table_LookupCategory instance);
    partial void InsertTable_LookupPhotoType(Table_LookupPhotoType instance);
    partial void UpdateTable_LookupPhotoType(Table_LookupPhotoType instance);
    partial void DeleteTable_LookupPhotoType(Table_LookupPhotoType instance);
    partial void InsertTable_VideosArchive(Table_VideosArchive instance);
    partial void UpdateTable_VideosArchive(Table_VideosArchive instance);
    partial void DeleteTable_VideosArchive(Table_VideosArchive instance);
    partial void InsertTable_PhotosArchive(Table_PhotosArchive instance);
    partial void UpdateTable_PhotosArchive(Table_PhotosArchive instance);
    partial void DeleteTable_PhotosArchive(Table_PhotosArchive instance);
    partial void InsertTable_Article(Table_Article instance);
    partial void UpdateTable_Article(Table_Article instance);
    partial void DeleteTable_Article(Table_Article instance);
    partial void InsertTable_OriginalPhotosArchive(Table_OriginalPhotosArchive instance);
    partial void UpdateTable_OriginalPhotosArchive(Table_OriginalPhotosArchive instance);
    partial void DeleteTable_OriginalPhotosArchive(Table_OriginalPhotosArchive instance);
    #endregion
		
		public DataClassesEditArticleDataContext() : 
				base(global::Kan_Naim_Main.Properties.Settings.Default.Kan_NaimConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesEditArticleDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesEditArticleDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesEditArticleDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesEditArticleDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Table_LookupArticleStatus> Table_LookupArticleStatus
		{
			get
			{
				return this.GetTable<Table_LookupArticleStatus>();
			}
		}
		
		public System.Data.Linq.Table<Table_LookupCategory> Table_LookupCategories
		{
			get
			{
				return this.GetTable<Table_LookupCategory>();
			}
		}
		
		public System.Data.Linq.Table<Table_LookupPhotoType> Table_LookupPhotoTypes
		{
			get
			{
				return this.GetTable<Table_LookupPhotoType>();
			}
		}
		
		public System.Data.Linq.Table<Table_VideosArchive> Table_VideosArchives
		{
			get
			{
				return this.GetTable<Table_VideosArchive>();
			}
		}
		
		public System.Data.Linq.Table<Table_PhotosArchive> Table_PhotosArchives
		{
			get
			{
				return this.GetTable<Table_PhotosArchive>();
			}
		}
		
		public System.Data.Linq.Table<Table_Article> Table_Articles
		{
			get
			{
				return this.GetTable<Table_Article>();
			}
		}
		
		public System.Data.Linq.Table<Table_Taktzirim> Table_Taktzirims
		{
			get
			{
				return this.GetTable<Table_Taktzirim>();
			}
		}
		
		public System.Data.Linq.Table<Table_LookupReporter> Table_LookupReporters
		{
			get
			{
				return this.GetTable<Table_LookupReporter>();
			}
		}
		
		public System.Data.Linq.Table<Table_OriginalPhotosArchive> Table_OriginalPhotosArchives
		{
			get
			{
				return this.GetTable<Table_OriginalPhotosArchive>();
			}
		}
	}
	
	[Table(Name="dbo.Table_LookupArticleStatus")]
	public partial class Table_LookupArticleStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusId;
		
		private string _StatusDescription;
		
		private EntityRef<Table_Article> _Table_Article;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIdChanging(int value);
    partial void OnStatusIdChanged();
    partial void OnStatusDescriptionChanging(string value);
    partial void OnStatusDescriptionChanged();
    #endregion
		
		public Table_LookupArticleStatus()
		{
			this._Table_Article = default(EntityRef<Table_Article>);
			OnCreated();
		}
		
		[Column(Storage="_StatusId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					if (this._Table_Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[Column(Storage="_StatusDescription", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string StatusDescription
		{
			get
			{
				return this._StatusDescription;
			}
			set
			{
				if ((this._StatusDescription != value))
				{
					this.OnStatusDescriptionChanging(value);
					this.SendPropertyChanging();
					this._StatusDescription = value;
					this.SendPropertyChanged("StatusDescription");
					this.OnStatusDescriptionChanged();
				}
			}
		}
		
		[Association(Name="Table_Article_Table_LookupArticleStatus", Storage="_Table_Article", ThisKey="StatusId", OtherKey="StatusId", IsForeignKey=true)]
		public Table_Article Table_Article
		{
			get
			{
				return this._Table_Article.Entity;
			}
			set
			{
				Table_Article previousValue = this._Table_Article.Entity;
				if (((previousValue != value) 
							|| (this._Table_Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Table_Article.Entity = null;
						previousValue.Table_LookupArticleStatus.Remove(this);
					}
					this._Table_Article.Entity = value;
					if ((value != null))
					{
						value.Table_LookupArticleStatus.Add(this);
						this._StatusId = value.StatusId;
					}
					else
					{
						this._StatusId = default(int);
					}
					this.SendPropertyChanged("Table_Article");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Table_LookupCategories")]
	public partial class Table_LookupCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatId;
		
		private int _ParentCatId;
		
		private string _CatHebrewName;
		
		private string _CatEnglishName;
		
		private string _Tags;
		
		private string _RelatedCatIds;
		
		private System.Nullable<int> _PhotoId;
		
		private System.Nullable<int> _RssId;
		
		private string _MetaTags;
		
		private string _Description;
		
		private EntityRef<Table_Article> _Table_Article;
		
		private EntityRef<Table_Article> _Table_Article1;
		
		private EntityRef<Table_OriginalPhotosArchive> _Table_OriginalPhotosArchive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatIdChanging(int value);
    partial void OnCatIdChanged();
    partial void OnParentCatIdChanging(int value);
    partial void OnParentCatIdChanged();
    partial void OnCatHebrewNameChanging(string value);
    partial void OnCatHebrewNameChanged();
    partial void OnCatEnglishNameChanging(string value);
    partial void OnCatEnglishNameChanged();
    partial void OnTagsChanging(string value);
    partial void OnTagsChanged();
    partial void OnRelatedCatIdsChanging(string value);
    partial void OnRelatedCatIdsChanged();
    partial void OnPhotoIdChanging(System.Nullable<int> value);
    partial void OnPhotoIdChanged();
    partial void OnRssIdChanging(System.Nullable<int> value);
    partial void OnRssIdChanged();
    partial void OnMetaTagsChanging(string value);
    partial void OnMetaTagsChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Table_LookupCategory()
		{
			this._Table_Article = default(EntityRef<Table_Article>);
			this._Table_Article1 = default(EntityRef<Table_Article>);
			this._Table_OriginalPhotosArchive = default(EntityRef<Table_OriginalPhotosArchive>);
			OnCreated();
		}
		
		[Column(Storage="_CatId", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatId
		{
			get
			{
				return this._CatId;
			}
			set
			{
				if ((this._CatId != value))
				{
					if (this._Table_Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCatIdChanging(value);
					this.SendPropertyChanging();
					this._CatId = value;
					this.SendPropertyChanged("CatId");
					this.OnCatIdChanged();
				}
			}
		}
		
		[Column(Storage="_ParentCatId", DbType="Int NOT NULL")]
		public int ParentCatId
		{
			get
			{
				return this._ParentCatId;
			}
			set
			{
				if ((this._ParentCatId != value))
				{
					this.OnParentCatIdChanging(value);
					this.SendPropertyChanging();
					this._ParentCatId = value;
					this.SendPropertyChanged("ParentCatId");
					this.OnParentCatIdChanged();
				}
			}
		}
		
		[Column(Storage="_CatHebrewName", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string CatHebrewName
		{
			get
			{
				return this._CatHebrewName;
			}
			set
			{
				if ((this._CatHebrewName != value))
				{
					this.OnCatHebrewNameChanging(value);
					this.SendPropertyChanging();
					this._CatHebrewName = value;
					this.SendPropertyChanged("CatHebrewName");
					this.OnCatHebrewNameChanged();
				}
			}
		}
		
		[Column(Storage="_CatEnglishName", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string CatEnglishName
		{
			get
			{
				return this._CatEnglishName;
			}
			set
			{
				if ((this._CatEnglishName != value))
				{
					this.OnCatEnglishNameChanging(value);
					this.SendPropertyChanging();
					this._CatEnglishName = value;
					this.SendPropertyChanged("CatEnglishName");
					this.OnCatEnglishNameChanged();
				}
			}
		}
		
		[Column(Storage="_Tags", DbType="NVarChar(100)")]
		public string Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				if ((this._Tags != value))
				{
					this.OnTagsChanging(value);
					this.SendPropertyChanging();
					this._Tags = value;
					this.SendPropertyChanged("Tags");
					this.OnTagsChanged();
				}
			}
		}
		
		[Column(Storage="_RelatedCatIds", DbType="NVarChar(30)")]
		public string RelatedCatIds
		{
			get
			{
				return this._RelatedCatIds;
			}
			set
			{
				if ((this._RelatedCatIds != value))
				{
					this.OnRelatedCatIdsChanging(value);
					this.SendPropertyChanging();
					this._RelatedCatIds = value;
					this.SendPropertyChanged("RelatedCatIds");
					this.OnRelatedCatIdsChanged();
				}
			}
		}
		
		[Column(Storage="_PhotoId", DbType="Int")]
		public System.Nullable<int> PhotoId
		{
			get
			{
				return this._PhotoId;
			}
			set
			{
				if ((this._PhotoId != value))
				{
					this.OnPhotoIdChanging(value);
					this.SendPropertyChanging();
					this._PhotoId = value;
					this.SendPropertyChanged("PhotoId");
					this.OnPhotoIdChanged();
				}
			}
		}
		
		[Column(Storage="_RssId", DbType="Int")]
		public System.Nullable<int> RssId
		{
			get
			{
				return this._RssId;
			}
			set
			{
				if ((this._RssId != value))
				{
					this.OnRssIdChanging(value);
					this.SendPropertyChanging();
					this._RssId = value;
					this.SendPropertyChanged("RssId");
					this.OnRssIdChanged();
				}
			}
		}
		
		[Column(Storage="_MetaTags", DbType="NVarChar(250)")]
		public string MetaTags
		{
			get
			{
				return this._MetaTags;
			}
			set
			{
				if ((this._MetaTags != value))
				{
					this.OnMetaTagsChanging(value);
					this.SendPropertyChanging();
					this._MetaTags = value;
					this.SendPropertyChanged("MetaTags");
					this.OnMetaTagsChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Association(Name="Table_Article_Table_LookupCategory", Storage="_Table_Article", ThisKey="CatId", OtherKey="CategoryId", IsForeignKey=true)]
		public Table_Article Table_Article
		{
			get
			{
				return this._Table_Article.Entity;
			}
			set
			{
				Table_Article previousValue = this._Table_Article.Entity;
				if (((previousValue != value) 
							|| (this._Table_Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Table_Article.Entity = null;
						previousValue.Table_LookupCategories.Remove(this);
					}
					this._Table_Article.Entity = value;
					if ((value != null))
					{
						value.Table_LookupCategories.Add(this);
						this._CatId = value.CategoryId;
					}
					else
					{
						this._CatId = default(int);
					}
					this.SendPropertyChanged("Table_Article");
				}
			}
		}
		
		[Association(Name="Table_Article_Table_LookupCategory1", Storage="_Table_Article1", ThisKey="CatId", OtherKey="CategoryId", IsForeignKey=true)]
		public Table_Article Table_Article1
		{
			get
			{
				return this._Table_Article1.Entity;
			}
			set
			{
				Table_Article previousValue = this._Table_Article1.Entity;
				if (((previousValue != value) 
							|| (this._Table_Article1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Table_Article1.Entity = null;
						previousValue.Table_LookupCategories1.Remove(this);
					}
					this._Table_Article1.Entity = value;
					if ((value != null))
					{
						value.Table_LookupCategories1.Add(this);
						this._CatId = value.CategoryId;
					}
					else
					{
						this._CatId = default(int);
					}
					this.SendPropertyChanged("Table_Article1");
				}
			}
		}
		
		[Association(Name="Table_OriginalPhotosArchive_Table_LookupCategory", Storage="_Table_OriginalPhotosArchive", ThisKey="CatId", OtherKey="CategoryId", IsForeignKey=true)]
		public Table_OriginalPhotosArchive Table_OriginalPhotosArchive
		{
			get
			{
				return this._Table_OriginalPhotosArchive.Entity;
			}
			set
			{
				Table_OriginalPhotosArchive previousValue = this._Table_OriginalPhotosArchive.Entity;
				if (((previousValue != value) 
							|| (this._Table_OriginalPhotosArchive.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Table_OriginalPhotosArchive.Entity = null;
						previousValue.Table_LookupCategories.Remove(this);
					}
					this._Table_OriginalPhotosArchive.Entity = value;
					if ((value != null))
					{
						value.Table_LookupCategories.Add(this);
						this._CatId = value.CategoryId;
					}
					else
					{
						this._CatId = default(int);
					}
					this.SendPropertyChanged("Table_OriginalPhotosArchive");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Table_LookupPhotoTypes")]
	public partial class Table_LookupPhotoType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhotoTypeId;
		
		private string _TypeDescription;
		
		private int _Width;
		
		private int _Height;
		
		private int _MaxSize;
		
		private EntityRef<Table_PhotosArchive> _Table_PhotosArchive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhotoTypeIdChanging(int value);
    partial void OnPhotoTypeIdChanged();
    partial void OnTypeDescriptionChanging(string value);
    partial void OnTypeDescriptionChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    partial void OnMaxSizeChanging(int value);
    partial void OnMaxSizeChanged();
    #endregion
		
		public Table_LookupPhotoType()
		{
			this._Table_PhotosArchive = default(EntityRef<Table_PhotosArchive>);
			OnCreated();
		}
		
		[Column(Storage="_PhotoTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhotoTypeId
		{
			get
			{
				return this._PhotoTypeId;
			}
			set
			{
				if ((this._PhotoTypeId != value))
				{
					if (this._Table_PhotosArchive.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhotoTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PhotoTypeId = value;
					this.SendPropertyChanged("PhotoTypeId");
					this.OnPhotoTypeIdChanged();
				}
			}
		}
		
		[Column(Storage="_TypeDescription", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string TypeDescription
		{
			get
			{
				return this._TypeDescription;
			}
			set
			{
				if ((this._TypeDescription != value))
				{
					this.OnTypeDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TypeDescription = value;
					this.SendPropertyChanged("TypeDescription");
					this.OnTypeDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[Column(Storage="_Height", DbType="Int NOT NULL")]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[Column(Storage="_MaxSize", DbType="Int NOT NULL")]
		public int MaxSize
		{
			get
			{
				return this._MaxSize;
			}
			set
			{
				if ((this._MaxSize != value))
				{
					this.OnMaxSizeChanging(value);
					this.SendPropertyChanging();
					this._MaxSize = value;
					this.SendPropertyChanged("MaxSize");
					this.OnMaxSizeChanged();
				}
			}
		}
		
		[Association(Name="Table_PhotosArchive_Table_LookupPhotoType", Storage="_Table_PhotosArchive", ThisKey="PhotoTypeId", OtherKey="PhotoTypeId", IsForeignKey=true)]
		public Table_PhotosArchive Table_PhotosArchive
		{
			get
			{
				return this._Table_PhotosArchive.Entity;
			}
			set
			{
				Table_PhotosArchive previousValue = this._Table_PhotosArchive.Entity;
				if (((previousValue != value) 
							|| (this._Table_PhotosArchive.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Table_PhotosArchive.Entity = null;
						previousValue.Table_LookupPhotoTypes.Remove(this);
					}
					this._Table_PhotosArchive.Entity = value;
					if ((value != null))
					{
						value.Table_LookupPhotoTypes.Add(this);
						this._PhotoTypeId = value.PhotoTypeId;
					}
					else
					{
						this._PhotoTypeId = default(int);
					}
					this.SendPropertyChanged("Table_PhotosArchive");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Table_VideosArchive")]
	public partial class Table_VideosArchive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CategoryId;
		
		private string _EmbedUrl;
		
		private string _Caption;
		
		private System.DateTime _Date;
		
		private string _CssClass;
		
		private string _AlternateText;
		
		private string _Description;
		
		private string _UrlLink;
		
		private System.Nullable<int> _LastTakId;
		
		private System.Nullable<int> _LastArticleId;
		
		private System.Nullable<int> _GalleryId;
		
		private EntityRef<Table_Article> _Table_Article;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnEmbedUrlChanging(string value);
    partial void OnEmbedUrlChanged();
    partial void OnCaptionChanging(string value);
    partial void OnCaptionChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCssClassChanging(string value);
    partial void OnCssClassChanged();
    partial void OnAlternateTextChanging(string value);
    partial void OnAlternateTextChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUrlLinkChanging(string value);
    partial void OnUrlLinkChanged();
    partial void OnLastTakIdChanging(System.Nullable<int> value);
    partial void OnLastTakIdChanged();
    partial void OnLastArticleIdChanging(System.Nullable<int> value);
    partial void OnLastArticleIdChanged();
    partial void OnGalleryIdChanging(System.Nullable<int> value);
    partial void OnGalleryIdChanged();
    #endregion
		
		public Table_VideosArchive()
		{
			this._Table_Article = default(EntityRef<Table_Article>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Table_Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[Column(Storage="_EmbedUrl", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string EmbedUrl
		{
			get
			{
				return this._EmbedUrl;
			}
			set
			{
				if ((this._EmbedUrl != value))
				{
					this.OnEmbedUrlChanging(value);
					this.SendPropertyChanging();
					this._EmbedUrl = value;
					this.SendPropertyChanged("EmbedUrl");
					this.OnEmbedUrlChanged();
				}
			}
		}
		
		[Column(Storage="_Caption", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Caption
		{
			get
			{
				return this._Caption;
			}
			set
			{
				if ((this._Caption != value))
				{
					this.OnCaptionChanging(value);
					this.SendPropertyChanging();
					this._Caption = value;
					this.SendPropertyChanged("Caption");
					this.OnCaptionChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_CssClass", DbType="NChar(20)")]
		public string CssClass
		{
			get
			{
				return this._CssClass;
			}
			set
			{
				if ((this._CssClass != value))
				{
					this.OnCssClassChanging(value);
					this.SendPropertyChanging();
					this._CssClass = value;
					this.SendPropertyChanged("CssClass");
					this.OnCssClassChanged();
				}
			}
		}
		
		[Column(Storage="_AlternateText", DbType="NVarChar(50)")]
		public string AlternateText
		{
			get
			{
				return this._AlternateText;
			}
			set
			{
				if ((this._AlternateText != value))
				{
					this.OnAlternateTextChanging(value);
					this.SendPropertyChanging();
					this._AlternateText = value;
					this.SendPropertyChanged("AlternateText");
					this.OnAlternateTextChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_UrlLink", DbType="NVarChar(50)")]
		public string UrlLink
		{
			get
			{
				return this._UrlLink;
			}
			set
			{
				if ((this._UrlLink != value))
				{
					this.OnUrlLinkChanging(value);
					this.SendPropertyChanging();
					this._UrlLink = value;
					this.SendPropertyChanged("UrlLink");
					this.OnUrlLinkChanged();
				}
			}
		}
		
		[Column(Storage="_LastTakId", DbType="Int")]
		public System.Nullable<int> LastTakId
		{
			get
			{
				return this._LastTakId;
			}
			set
			{
				if ((this._LastTakId != value))
				{
					this.OnLastTakIdChanging(value);
					this.SendPropertyChanging();
					this._LastTakId = value;
					this.SendPropertyChanged("LastTakId");
					this.OnLastTakIdChanged();
				}
			}
		}
		
		[Column(Storage="_LastArticleId", DbType="Int")]
		public System.Nullable<int> LastArticleId
		{
			get
			{
				return this._LastArticleId;
			}
			set
			{
				if ((this._LastArticleId != value))
				{
					this.OnLastArticleIdChanging(value);
					this.SendPropertyChanging();
					this._LastArticleId = value;
					this.SendPropertyChanged("LastArticleId");
					this.OnLastArticleIdChanged();
				}
			}
		}
		
		[Column(Storage="_GalleryId", DbType="Int")]
		public System.Nullable<int> GalleryId
		{
			get
			{
				return this._GalleryId;
			}
			set
			{
				if ((this._GalleryId != value))
				{
					this.OnGalleryIdChanging(value);
					this.SendPropertyChanging();
					this._GalleryId = value;
					this.SendPropertyChanged("GalleryId");
					this.OnGalleryIdChanged();
				}
			}
		}
		
		[Association(Name="Table_Article_Table_VideosArchive", Storage="_Table_Article", ThisKey="Id", OtherKey="EmbedObjId", IsForeignKey=true)]
		public Table_Article Table_Article
		{
			get
			{
				return this._Table_Article.Entity;
			}
			set
			{
				Table_Article previousValue = this._Table_Article.Entity;
				if (((previousValue != value) 
							|| (this._Table_Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Table_Article.Entity = null;
						previousValue.Table_VideosArchives.Remove(this);
					}
					this._Table_Article.Entity = value;
					if ((value != null))
					{
						value.Table_VideosArchives.Add(this);
						this._Id = value.EmbedObjId;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("Table_Article");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Table_PhotosArchive")]
	public partial class Table_PhotosArchive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ImageUrl;
		
		private int _PhotoTypeId;
		
		private System.DateTime _Date;
		
		private string _CssClass;
		
		private string _UrlLink;
		
		private System.Nullable<int> _LastTakId;
		
		private System.Nullable<int> _LastArticleId;
		
		private System.Nullable<int> _GalleryId;
		
		private System.Nullable<int> _Width;
		
		private System.Nullable<int> _Height;
		
		private int _OriginalPhotoId;
		
		private EntitySet<Table_LookupPhotoType> _Table_LookupPhotoTypes;
		
		private EntitySet<Table_OriginalPhotosArchive> _Table_OriginalPhotosArchives;
		
		private EntityRef<Table_Article> _Table_Article;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnPhotoTypeIdChanging(int value);
    partial void OnPhotoTypeIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCssClassChanging(string value);
    partial void OnCssClassChanged();
    partial void OnUrlLinkChanging(string value);
    partial void OnUrlLinkChanged();
    partial void OnLastTakIdChanging(System.Nullable<int> value);
    partial void OnLastTakIdChanged();
    partial void OnLastArticleIdChanging(System.Nullable<int> value);
    partial void OnLastArticleIdChanged();
    partial void OnGalleryIdChanging(System.Nullable<int> value);
    partial void OnGalleryIdChanged();
    partial void OnWidthChanging(System.Nullable<int> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    partial void OnOriginalPhotoIdChanging(int value);
    partial void OnOriginalPhotoIdChanged();
    #endregion
		
		public Table_PhotosArchive()
		{
			this._Table_LookupPhotoTypes = new EntitySet<Table_LookupPhotoType>(new Action<Table_LookupPhotoType>(this.attach_Table_LookupPhotoTypes), new Action<Table_LookupPhotoType>(this.detach_Table_LookupPhotoTypes));
			this._Table_OriginalPhotosArchives = new EntitySet<Table_OriginalPhotosArchive>(new Action<Table_OriginalPhotosArchive>(this.attach_Table_OriginalPhotosArchives), new Action<Table_OriginalPhotosArchive>(this.detach_Table_OriginalPhotosArchives));
			this._Table_Article = default(EntityRef<Table_Article>);
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Table_Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_ImageUrl", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[Column(Storage="_PhotoTypeId", DbType="Int NOT NULL")]
		public int PhotoTypeId
		{
			get
			{
				return this._PhotoTypeId;
			}
			set
			{
				if ((this._PhotoTypeId != value))
				{
					this.OnPhotoTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PhotoTypeId = value;
					this.SendPropertyChanged("PhotoTypeId");
					this.OnPhotoTypeIdChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_CssClass", DbType="NChar(20)")]
		public string CssClass
		{
			get
			{
				return this._CssClass;
			}
			set
			{
				if ((this._CssClass != value))
				{
					this.OnCssClassChanging(value);
					this.SendPropertyChanging();
					this._CssClass = value;
					this.SendPropertyChanged("CssClass");
					this.OnCssClassChanged();
				}
			}
		}
		
		[Column(Storage="_UrlLink", DbType="NVarChar(50)")]
		public string UrlLink
		{
			get
			{
				return this._UrlLink;
			}
			set
			{
				if ((this._UrlLink != value))
				{
					this.OnUrlLinkChanging(value);
					this.SendPropertyChanging();
					this._UrlLink = value;
					this.SendPropertyChanged("UrlLink");
					this.OnUrlLinkChanged();
				}
			}
		}
		
		[Column(Storage="_LastTakId", DbType="Int")]
		public System.Nullable<int> LastTakId
		{
			get
			{
				return this._LastTakId;
			}
			set
			{
				if ((this._LastTakId != value))
				{
					this.OnLastTakIdChanging(value);
					this.SendPropertyChanging();
					this._LastTakId = value;
					this.SendPropertyChanged("LastTakId");
					this.OnLastTakIdChanged();
				}
			}
		}
		
		[Column(Storage="_LastArticleId", DbType="Int")]
		public System.Nullable<int> LastArticleId
		{
			get
			{
				return this._LastArticleId;
			}
			set
			{
				if ((this._LastArticleId != value))
				{
					this.OnLastArticleIdChanging(value);
					this.SendPropertyChanging();
					this._LastArticleId = value;
					this.SendPropertyChanged("LastArticleId");
					this.OnLastArticleIdChanged();
				}
			}
		}
		
		[Column(Storage="_GalleryId", DbType="Int")]
		public System.Nullable<int> GalleryId
		{
			get
			{
				return this._GalleryId;
			}
			set
			{
				if ((this._GalleryId != value))
				{
					this.OnGalleryIdChanging(value);
					this.SendPropertyChanging();
					this._GalleryId = value;
					this.SendPropertyChanged("GalleryId");
					this.OnGalleryIdChanged();
				}
			}
		}
		
		[Column(Storage="_Width", DbType="Int")]
		public System.Nullable<int> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[Column(Storage="_Height", DbType="Int")]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[Column(Storage="_OriginalPhotoId", DbType="Int NOT NULL")]
		public int OriginalPhotoId
		{
			get
			{
				return this._OriginalPhotoId;
			}
			set
			{
				if ((this._OriginalPhotoId != value))
				{
					this.OnOriginalPhotoIdChanging(value);
					this.SendPropertyChanging();
					this._OriginalPhotoId = value;
					this.SendPropertyChanged("OriginalPhotoId");
					this.OnOriginalPhotoIdChanged();
				}
			}
		}
		
		[Association(Name="Table_PhotosArchive_Table_LookupPhotoType", Storage="_Table_LookupPhotoTypes", ThisKey="PhotoTypeId", OtherKey="PhotoTypeId")]
		public EntitySet<Table_LookupPhotoType> Table_LookupPhotoTypes
		{
			get
			{
				return this._Table_LookupPhotoTypes;
			}
			set
			{
				this._Table_LookupPhotoTypes.Assign(value);
			}
		}
		
		[Association(Name="Table_PhotosArchive_Table_OriginalPhotosArchive", Storage="_Table_OriginalPhotosArchives", ThisKey="OriginalPhotoId", OtherKey="PhotoId")]
		public EntitySet<Table_OriginalPhotosArchive> Table_OriginalPhotosArchives
		{
			get
			{
				return this._Table_OriginalPhotosArchives;
			}
			set
			{
				this._Table_OriginalPhotosArchives.Assign(value);
			}
		}
		
		[Association(Name="Table_Article_Table_PhotosArchive", Storage="_Table_Article", ThisKey="Id", OtherKey="ImageId", IsForeignKey=true)]
		public Table_Article Table_Article
		{
			get
			{
				return this._Table_Article.Entity;
			}
			set
			{
				Table_Article previousValue = this._Table_Article.Entity;
				if (((previousValue != value) 
							|| (this._Table_Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Table_Article.Entity = null;
						previousValue.Table_PhotosArchives.Remove(this);
					}
					this._Table_Article.Entity = value;
					if ((value != null))
					{
						value.Table_PhotosArchives.Add(this);
						this._Id = value.ImageId;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("Table_Article");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Table_LookupPhotoTypes(Table_LookupPhotoType entity)
		{
			this.SendPropertyChanging();
			entity.Table_PhotosArchive = this;
		}
		
		private void detach_Table_LookupPhotoTypes(Table_LookupPhotoType entity)
		{
			this.SendPropertyChanging();
			entity.Table_PhotosArchive = null;
		}
		
		private void attach_Table_OriginalPhotosArchives(Table_OriginalPhotosArchive entity)
		{
			this.SendPropertyChanging();
			entity.Table_PhotosArchive = this;
		}
		
		private void detach_Table_OriginalPhotosArchives(Table_OriginalPhotosArchive entity)
		{
			this.SendPropertyChanging();
			entity.Table_PhotosArchive = null;
		}
	}
	
	[Table(Name="dbo.Table_Articles")]
	public partial class Table_Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArticleId;
		
		private int _CategoryId;
		
		private bool _IsPublished;
		
		private int _StatusId;
		
		private string _Title;
		
		private string _SubTitle;
		
		private string _ArticleContent;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _CreateDate;
		
		private int _CreatedBy;
		
		private int _UpdatedBy;
		
		private bool _FlagShowDateTime;
		
		private bool _FlagActiveRSS;
		
		private bool _FlagActiveMivzak;
		
		private bool _FlagTak3ColPicTxt;
		
		private bool _FlagTak3ColPic;
		
		private bool _FlagTak3ColTxt;
		
		private bool _FlagTak2ColPicTxt;
		
		private bool _FlagTak2ColPic;
		
		private bool _FlagTak2ColTxt;
		
		private bool _FlagTak1ColPicTxt;
		
		private bool _FlagTak1ColPic;
		
		private bool _FlagTak1ColTxt;
		
		private bool _FlagTakSmallPicTxt;
		
		private bool _FlagTakSmallPic;
		
		private bool _FlagTakSmallTxt;
		
		private bool _FlagTakLineFeeds;
		
		private int _CountViews;
		
		private string _Summery;
		
		private System.Nullable<int> _CountComments;
		
		private int _ImageId;
		
		private int _EmbedObjId;
		
		private string _MetaTags;
		
		private string _KeysLookup;
		
		private string _KeysAssociated;
		
		private EntitySet<Table_LookupArticleStatus> _Table_LookupArticleStatus;
		
		private EntitySet<Table_LookupCategory> _Table_LookupCategories;
		
		private EntitySet<Table_LookupCategory> _Table_LookupCategories1;
		
		private EntitySet<Table_VideosArchive> _Table_VideosArchives;
		
		private EntitySet<Table_PhotosArchive> _Table_PhotosArchives;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnIsPublishedChanging(bool value);
    partial void OnIsPublishedChanged();
    partial void OnStatusIdChanging(int value);
    partial void OnStatusIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSubTitleChanging(string value);
    partial void OnSubTitleChanged();
    partial void OnArticleContentChanging(string value);
    partial void OnArticleContentChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnFlagShowDateTimeChanging(bool value);
    partial void OnFlagShowDateTimeChanged();
    partial void OnFlagActiveRSSChanging(bool value);
    partial void OnFlagActiveRSSChanged();
    partial void OnFlagActiveMivzakChanging(bool value);
    partial void OnFlagActiveMivzakChanged();
    partial void OnFlagTak3ColPicTxtChanging(bool value);
    partial void OnFlagTak3ColPicTxtChanged();
    partial void OnFlagTak3ColPicChanging(bool value);
    partial void OnFlagTak3ColPicChanged();
    partial void OnFlagTak3ColTxtChanging(bool value);
    partial void OnFlagTak3ColTxtChanged();
    partial void OnFlagTak2ColPicTxtChanging(bool value);
    partial void OnFlagTak2ColPicTxtChanged();
    partial void OnFlagTak2ColPicChanging(bool value);
    partial void OnFlagTak2ColPicChanged();
    partial void OnFlagTak2ColTxtChanging(bool value);
    partial void OnFlagTak2ColTxtChanged();
    partial void OnFlagTak1ColPicTxtChanging(bool value);
    partial void OnFlagTak1ColPicTxtChanged();
    partial void OnFlagTak1ColPicChanging(bool value);
    partial void OnFlagTak1ColPicChanged();
    partial void OnFlagTak1ColTxtChanging(bool value);
    partial void OnFlagTak1ColTxtChanged();
    partial void OnFlagTakSmallPicTxtChanging(bool value);
    partial void OnFlagTakSmallPicTxtChanged();
    partial void OnFlagTakSmallPicChanging(bool value);
    partial void OnFlagTakSmallPicChanged();
    partial void OnFlagTakSmallTxtChanging(bool value);
    partial void OnFlagTakSmallTxtChanged();
    partial void OnFlagTakLineFeedsChanging(bool value);
    partial void OnFlagTakLineFeedsChanged();
    partial void OnCountViewsChanging(int value);
    partial void OnCountViewsChanged();
    partial void OnSummeryChanging(string value);
    partial void OnSummeryChanged();
    partial void OnCountCommentsChanging(System.Nullable<int> value);
    partial void OnCountCommentsChanged();
    partial void OnImageIdChanging(int value);
    partial void OnImageIdChanged();
    partial void OnEmbedObjIdChanging(int value);
    partial void OnEmbedObjIdChanged();
    partial void OnMetaTagsChanging(string value);
    partial void OnMetaTagsChanged();
    partial void OnKeysLookupChanging(string value);
    partial void OnKeysLookupChanged();
    partial void OnKeysAssociatedChanging(string value);
    partial void OnKeysAssociatedChanged();
    #endregion
		
		public Table_Article()
		{
			this._Table_LookupArticleStatus = new EntitySet<Table_LookupArticleStatus>(new Action<Table_LookupArticleStatus>(this.attach_Table_LookupArticleStatus), new Action<Table_LookupArticleStatus>(this.detach_Table_LookupArticleStatus));
			this._Table_LookupCategories = new EntitySet<Table_LookupCategory>(new Action<Table_LookupCategory>(this.attach_Table_LookupCategories), new Action<Table_LookupCategory>(this.detach_Table_LookupCategories));
			this._Table_LookupCategories1 = new EntitySet<Table_LookupCategory>(new Action<Table_LookupCategory>(this.attach_Table_LookupCategories1), new Action<Table_LookupCategory>(this.detach_Table_LookupCategories1));
			this._Table_VideosArchives = new EntitySet<Table_VideosArchive>(new Action<Table_VideosArchive>(this.attach_Table_VideosArchives), new Action<Table_VideosArchive>(this.detach_Table_VideosArchives));
			this._Table_PhotosArchives = new EntitySet<Table_PhotosArchive>(new Action<Table_PhotosArchive>(this.attach_Table_PhotosArchives), new Action<Table_PhotosArchive>(this.detach_Table_PhotosArchives));
			OnCreated();
		}
		
		[Column(Storage="_ArticleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[Column(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[Column(Storage="_IsPublished", DbType="Bit NOT NULL")]
		public bool IsPublished
		{
			get
			{
				return this._IsPublished;
			}
			set
			{
				if ((this._IsPublished != value))
				{
					this.OnIsPublishedChanging(value);
					this.SendPropertyChanging();
					this._IsPublished = value;
					this.SendPropertyChanged("IsPublished");
					this.OnIsPublishedChanged();
				}
			}
		}
		
		[Column(Storage="_StatusId", DbType="Int NOT NULL")]
		public int StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_SubTitle", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SubTitle
		{
			get
			{
				return this._SubTitle;
			}
			set
			{
				if ((this._SubTitle != value))
				{
					this.OnSubTitleChanging(value);
					this.SendPropertyChanging();
					this._SubTitle = value;
					this.SendPropertyChanged("SubTitle");
					this.OnSubTitleChanged();
				}
			}
		}
		
		[Column(Storage="_ArticleContent", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ArticleContent
		{
			get
			{
				return this._ArticleContent;
			}
			set
			{
				if ((this._ArticleContent != value))
				{
					this.OnArticleContentChanging(value);
					this.SendPropertyChanging();
					this._ArticleContent = value;
					this.SendPropertyChanged("ArticleContent");
					this.OnArticleContentChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[Column(Storage="_FlagShowDateTime", DbType="Bit NOT NULL")]
		public bool FlagShowDateTime
		{
			get
			{
				return this._FlagShowDateTime;
			}
			set
			{
				if ((this._FlagShowDateTime != value))
				{
					this.OnFlagShowDateTimeChanging(value);
					this.SendPropertyChanging();
					this._FlagShowDateTime = value;
					this.SendPropertyChanged("FlagShowDateTime");
					this.OnFlagShowDateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_FlagActiveRSS", DbType="Bit NOT NULL")]
		public bool FlagActiveRSS
		{
			get
			{
				return this._FlagActiveRSS;
			}
			set
			{
				if ((this._FlagActiveRSS != value))
				{
					this.OnFlagActiveRSSChanging(value);
					this.SendPropertyChanging();
					this._FlagActiveRSS = value;
					this.SendPropertyChanged("FlagActiveRSS");
					this.OnFlagActiveRSSChanged();
				}
			}
		}
		
		[Column(Storage="_FlagActiveMivzak", DbType="Bit NOT NULL")]
		public bool FlagActiveMivzak
		{
			get
			{
				return this._FlagActiveMivzak;
			}
			set
			{
				if ((this._FlagActiveMivzak != value))
				{
					this.OnFlagActiveMivzakChanging(value);
					this.SendPropertyChanging();
					this._FlagActiveMivzak = value;
					this.SendPropertyChanged("FlagActiveMivzak");
					this.OnFlagActiveMivzakChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTak3ColPicTxt", DbType="Bit NOT NULL")]
		public bool FlagTak3ColPicTxt
		{
			get
			{
				return this._FlagTak3ColPicTxt;
			}
			set
			{
				if ((this._FlagTak3ColPicTxt != value))
				{
					this.OnFlagTak3ColPicTxtChanging(value);
					this.SendPropertyChanging();
					this._FlagTak3ColPicTxt = value;
					this.SendPropertyChanged("FlagTak3ColPicTxt");
					this.OnFlagTak3ColPicTxtChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTak3ColPic", DbType="Bit NOT NULL")]
		public bool FlagTak3ColPic
		{
			get
			{
				return this._FlagTak3ColPic;
			}
			set
			{
				if ((this._FlagTak3ColPic != value))
				{
					this.OnFlagTak3ColPicChanging(value);
					this.SendPropertyChanging();
					this._FlagTak3ColPic = value;
					this.SendPropertyChanged("FlagTak3ColPic");
					this.OnFlagTak3ColPicChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTak3ColTxt", DbType="Bit NOT NULL")]
		public bool FlagTak3ColTxt
		{
			get
			{
				return this._FlagTak3ColTxt;
			}
			set
			{
				if ((this._FlagTak3ColTxt != value))
				{
					this.OnFlagTak3ColTxtChanging(value);
					this.SendPropertyChanging();
					this._FlagTak3ColTxt = value;
					this.SendPropertyChanged("FlagTak3ColTxt");
					this.OnFlagTak3ColTxtChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTak2ColPicTxt", DbType="Bit NOT NULL")]
		public bool FlagTak2ColPicTxt
		{
			get
			{
				return this._FlagTak2ColPicTxt;
			}
			set
			{
				if ((this._FlagTak2ColPicTxt != value))
				{
					this.OnFlagTak2ColPicTxtChanging(value);
					this.SendPropertyChanging();
					this._FlagTak2ColPicTxt = value;
					this.SendPropertyChanged("FlagTak2ColPicTxt");
					this.OnFlagTak2ColPicTxtChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTak2ColPic", DbType="Bit NOT NULL")]
		public bool FlagTak2ColPic
		{
			get
			{
				return this._FlagTak2ColPic;
			}
			set
			{
				if ((this._FlagTak2ColPic != value))
				{
					this.OnFlagTak2ColPicChanging(value);
					this.SendPropertyChanging();
					this._FlagTak2ColPic = value;
					this.SendPropertyChanged("FlagTak2ColPic");
					this.OnFlagTak2ColPicChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTak2ColTxt", DbType="Bit NOT NULL")]
		public bool FlagTak2ColTxt
		{
			get
			{
				return this._FlagTak2ColTxt;
			}
			set
			{
				if ((this._FlagTak2ColTxt != value))
				{
					this.OnFlagTak2ColTxtChanging(value);
					this.SendPropertyChanging();
					this._FlagTak2ColTxt = value;
					this.SendPropertyChanged("FlagTak2ColTxt");
					this.OnFlagTak2ColTxtChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTak1ColPicTxt", DbType="Bit NOT NULL")]
		public bool FlagTak1ColPicTxt
		{
			get
			{
				return this._FlagTak1ColPicTxt;
			}
			set
			{
				if ((this._FlagTak1ColPicTxt != value))
				{
					this.OnFlagTak1ColPicTxtChanging(value);
					this.SendPropertyChanging();
					this._FlagTak1ColPicTxt = value;
					this.SendPropertyChanged("FlagTak1ColPicTxt");
					this.OnFlagTak1ColPicTxtChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTak1ColPic", DbType="Bit NOT NULL")]
		public bool FlagTak1ColPic
		{
			get
			{
				return this._FlagTak1ColPic;
			}
			set
			{
				if ((this._FlagTak1ColPic != value))
				{
					this.OnFlagTak1ColPicChanging(value);
					this.SendPropertyChanging();
					this._FlagTak1ColPic = value;
					this.SendPropertyChanged("FlagTak1ColPic");
					this.OnFlagTak1ColPicChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTak1ColTxt", DbType="Bit NOT NULL")]
		public bool FlagTak1ColTxt
		{
			get
			{
				return this._FlagTak1ColTxt;
			}
			set
			{
				if ((this._FlagTak1ColTxt != value))
				{
					this.OnFlagTak1ColTxtChanging(value);
					this.SendPropertyChanging();
					this._FlagTak1ColTxt = value;
					this.SendPropertyChanged("FlagTak1ColTxt");
					this.OnFlagTak1ColTxtChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTakSmallPicTxt", DbType="Bit NOT NULL")]
		public bool FlagTakSmallPicTxt
		{
			get
			{
				return this._FlagTakSmallPicTxt;
			}
			set
			{
				if ((this._FlagTakSmallPicTxt != value))
				{
					this.OnFlagTakSmallPicTxtChanging(value);
					this.SendPropertyChanging();
					this._FlagTakSmallPicTxt = value;
					this.SendPropertyChanged("FlagTakSmallPicTxt");
					this.OnFlagTakSmallPicTxtChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTakSmallPic", DbType="Bit NOT NULL")]
		public bool FlagTakSmallPic
		{
			get
			{
				return this._FlagTakSmallPic;
			}
			set
			{
				if ((this._FlagTakSmallPic != value))
				{
					this.OnFlagTakSmallPicChanging(value);
					this.SendPropertyChanging();
					this._FlagTakSmallPic = value;
					this.SendPropertyChanged("FlagTakSmallPic");
					this.OnFlagTakSmallPicChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTakSmallTxt", DbType="Bit NOT NULL")]
		public bool FlagTakSmallTxt
		{
			get
			{
				return this._FlagTakSmallTxt;
			}
			set
			{
				if ((this._FlagTakSmallTxt != value))
				{
					this.OnFlagTakSmallTxtChanging(value);
					this.SendPropertyChanging();
					this._FlagTakSmallTxt = value;
					this.SendPropertyChanged("FlagTakSmallTxt");
					this.OnFlagTakSmallTxtChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTakLineFeeds", DbType="Bit NOT NULL")]
		public bool FlagTakLineFeeds
		{
			get
			{
				return this._FlagTakLineFeeds;
			}
			set
			{
				if ((this._FlagTakLineFeeds != value))
				{
					this.OnFlagTakLineFeedsChanging(value);
					this.SendPropertyChanging();
					this._FlagTakLineFeeds = value;
					this.SendPropertyChanged("FlagTakLineFeeds");
					this.OnFlagTakLineFeedsChanged();
				}
			}
		}
		
		[Column(Storage="_CountViews", DbType="Int NOT NULL")]
		public int CountViews
		{
			get
			{
				return this._CountViews;
			}
			set
			{
				if ((this._CountViews != value))
				{
					this.OnCountViewsChanging(value);
					this.SendPropertyChanging();
					this._CountViews = value;
					this.SendPropertyChanged("CountViews");
					this.OnCountViewsChanged();
				}
			}
		}
		
		[Column(Storage="_Summery", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Summery
		{
			get
			{
				return this._Summery;
			}
			set
			{
				if ((this._Summery != value))
				{
					this.OnSummeryChanging(value);
					this.SendPropertyChanging();
					this._Summery = value;
					this.SendPropertyChanged("Summery");
					this.OnSummeryChanged();
				}
			}
		}
		
		[Column(Storage="_CountComments", DbType="Int")]
		public System.Nullable<int> CountComments
		{
			get
			{
				return this._CountComments;
			}
			set
			{
				if ((this._CountComments != value))
				{
					this.OnCountCommentsChanging(value);
					this.SendPropertyChanging();
					this._CountComments = value;
					this.SendPropertyChanged("CountComments");
					this.OnCountCommentsChanged();
				}
			}
		}
		
		[Column(Storage="_ImageId", DbType="Int")]
		public int ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					this.OnImageIdChanging(value);
					this.SendPropertyChanging();
					this._ImageId = value;
					this.SendPropertyChanged("ImageId");
					this.OnImageIdChanged();
				}
			}
		}
		
		[Column(Storage="_EmbedObjId", DbType="Int")]
		public int EmbedObjId
		{
			get
			{
				return this._EmbedObjId;
			}
			set
			{
				if ((this._EmbedObjId != value))
				{
					this.OnEmbedObjIdChanging(value);
					this.SendPropertyChanging();
					this._EmbedObjId = value;
					this.SendPropertyChanged("EmbedObjId");
					this.OnEmbedObjIdChanged();
				}
			}
		}
		
		[Column(Storage="_MetaTags", DbType="NVarChar(200)")]
		public string MetaTags
		{
			get
			{
				return this._MetaTags;
			}
			set
			{
				if ((this._MetaTags != value))
				{
					this.OnMetaTagsChanging(value);
					this.SendPropertyChanging();
					this._MetaTags = value;
					this.SendPropertyChanged("MetaTags");
					this.OnMetaTagsChanged();
				}
			}
		}
		
		[Column(Storage="_KeysLookup", DbType="NVarChar(90)")]
		public string KeysLookup
		{
			get
			{
				return this._KeysLookup;
			}
			set
			{
				if ((this._KeysLookup != value))
				{
					this.OnKeysLookupChanging(value);
					this.SendPropertyChanging();
					this._KeysLookup = value;
					this.SendPropertyChanged("KeysLookup");
					this.OnKeysLookupChanged();
				}
			}
		}
		
		[Column(Storage="_KeysAssociated", DbType="NVarChar(90)")]
		public string KeysAssociated
		{
			get
			{
				return this._KeysAssociated;
			}
			set
			{
				if ((this._KeysAssociated != value))
				{
					this.OnKeysAssociatedChanging(value);
					this.SendPropertyChanging();
					this._KeysAssociated = value;
					this.SendPropertyChanged("KeysAssociated");
					this.OnKeysAssociatedChanged();
				}
			}
		}
		
		[Association(Name="Table_Article_Table_LookupArticleStatus", Storage="_Table_LookupArticleStatus", ThisKey="StatusId", OtherKey="StatusId")]
		public EntitySet<Table_LookupArticleStatus> Table_LookupArticleStatus
		{
			get
			{
				return this._Table_LookupArticleStatus;
			}
			set
			{
				this._Table_LookupArticleStatus.Assign(value);
			}
		}
		
		[Association(Name="Table_Article_Table_LookupCategory", Storage="_Table_LookupCategories", ThisKey="CategoryId", OtherKey="CatId")]
		public EntitySet<Table_LookupCategory> Table_LookupCategories
		{
			get
			{
				return this._Table_LookupCategories;
			}
			set
			{
				this._Table_LookupCategories.Assign(value);
			}
		}
		
		[Association(Name="Table_Article_Table_LookupCategory1", Storage="_Table_LookupCategories1", ThisKey="CategoryId", OtherKey="CatId")]
		public EntitySet<Table_LookupCategory> Table_LookupCategories1
		{
			get
			{
				return this._Table_LookupCategories1;
			}
			set
			{
				this._Table_LookupCategories1.Assign(value);
			}
		}
		
		[Association(Name="Table_Article_Table_VideosArchive", Storage="_Table_VideosArchives", ThisKey="EmbedObjId", OtherKey="Id")]
		public EntitySet<Table_VideosArchive> Table_VideosArchives
		{
			get
			{
				return this._Table_VideosArchives;
			}
			set
			{
				this._Table_VideosArchives.Assign(value);
			}
		}
		
		[Association(Name="Table_Article_Table_PhotosArchive", Storage="_Table_PhotosArchives", ThisKey="ImageId", OtherKey="Id")]
		public EntitySet<Table_PhotosArchive> Table_PhotosArchives
		{
			get
			{
				return this._Table_PhotosArchives;
			}
			set
			{
				this._Table_PhotosArchives.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Table_LookupArticleStatus(Table_LookupArticleStatus entity)
		{
			this.SendPropertyChanging();
			entity.Table_Article = this;
		}
		
		private void detach_Table_LookupArticleStatus(Table_LookupArticleStatus entity)
		{
			this.SendPropertyChanging();
			entity.Table_Article = null;
		}
		
		private void attach_Table_LookupCategories(Table_LookupCategory entity)
		{
			this.SendPropertyChanging();
			entity.Table_Article = this;
		}
		
		private void detach_Table_LookupCategories(Table_LookupCategory entity)
		{
			this.SendPropertyChanging();
			entity.Table_Article = null;
		}
		
		private void attach_Table_LookupCategories1(Table_LookupCategory entity)
		{
			this.SendPropertyChanging();
			entity.Table_Article1 = this;
		}
		
		private void detach_Table_LookupCategories1(Table_LookupCategory entity)
		{
			this.SendPropertyChanging();
			entity.Table_Article1 = null;
		}
		
		private void attach_Table_VideosArchives(Table_VideosArchive entity)
		{
			this.SendPropertyChanging();
			entity.Table_Article = this;
		}
		
		private void detach_Table_VideosArchives(Table_VideosArchive entity)
		{
			this.SendPropertyChanging();
			entity.Table_Article = null;
		}
		
		private void attach_Table_PhotosArchives(Table_PhotosArchive entity)
		{
			this.SendPropertyChanging();
			entity.Table_Article = this;
		}
		
		private void detach_Table_PhotosArchives(Table_PhotosArchive entity)
		{
			this.SendPropertyChanging();
			entity.Table_Article = null;
		}
	}
	
	[Table(Name="dbo.Table_Taktzirim")]
	public partial class Table_Taktzirim
	{
		
		private int _TakId;
		
		private int _ArticleId;
		
		private string _TakTitle;
		
		private string _TakContent;
		
		private int _TakTypeId;
		
		private int _PhotoId;
		
		private int _EmbedObjId;
		
		private int _ScheduleId;
		
		public Table_Taktzirim()
		{
		}
		
		[Column(Storage="_TakId", DbType="Int NOT NULL")]
		public int TakId
		{
			get
			{
				return this._TakId;
			}
			set
			{
				if ((this._TakId != value))
				{
					this._TakId = value;
				}
			}
		}
		
		[Column(Storage="_ArticleId", DbType="Int NOT NULL")]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					this._ArticleId = value;
				}
			}
		}
		
		[Column(Storage="_TakTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TakTitle
		{
			get
			{
				return this._TakTitle;
			}
			set
			{
				if ((this._TakTitle != value))
				{
					this._TakTitle = value;
				}
			}
		}
		
		[Column(Storage="_TakContent", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string TakContent
		{
			get
			{
				return this._TakContent;
			}
			set
			{
				if ((this._TakContent != value))
				{
					this._TakContent = value;
				}
			}
		}
		
		[Column(Storage="_TakTypeId", DbType="Int NOT NULL")]
		public int TakTypeId
		{
			get
			{
				return this._TakTypeId;
			}
			set
			{
				if ((this._TakTypeId != value))
				{
					this._TakTypeId = value;
				}
			}
		}
		
		[Column(Storage="_PhotoId", DbType="Int NOT NULL")]
		public int PhotoId
		{
			get
			{
				return this._PhotoId;
			}
			set
			{
				if ((this._PhotoId != value))
				{
					this._PhotoId = value;
				}
			}
		}
		
		[Column(Storage="_EmbedObjId", DbType="Int NOT NULL")]
		public int EmbedObjId
		{
			get
			{
				return this._EmbedObjId;
			}
			set
			{
				if ((this._EmbedObjId != value))
				{
					this._EmbedObjId = value;
				}
			}
		}
		
		[Column(Storage="_ScheduleId", DbType="Int NOT NULL")]
		public int ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					this._ScheduleId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Table_LookupReporters")]
	public partial class Table_LookupReporter
	{
		
		private int _UserId;
		
		private string _PublishNameShort;
		
		private string _PublishNameLong;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _MobilePhone;
		
		private string _OtherPhone;
		
		private string _Fax;
		
		private string _Address;
		
		private string _Email;
		
		public Table_LookupReporter()
		{
		}
		
		[Column(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_PublishNameShort", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string PublishNameShort
		{
			get
			{
				return this._PublishNameShort;
			}
			set
			{
				if ((this._PublishNameShort != value))
				{
					this._PublishNameShort = value;
				}
			}
		}
		
		[Column(Storage="_PublishNameLong", DbType="NVarChar(30)")]
		public string PublishNameLong
		{
			get
			{
				return this._PublishNameLong;
			}
			set
			{
				if ((this._PublishNameLong != value))
				{
					this._PublishNameLong = value;
				}
			}
		}
		
		[Column(Storage="_FirstName", DbType="NVarChar(15)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[Column(Storage="_LastName", DbType="NVarChar(15)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[Column(Storage="_MobilePhone", DbType="NChar(15)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this._MobilePhone = value;
				}
			}
		}
		
		[Column(Storage="_OtherPhone", DbType="NChar(15)")]
		public string OtherPhone
		{
			get
			{
				return this._OtherPhone;
			}
			set
			{
				if ((this._OtherPhone != value))
				{
					this._OtherPhone = value;
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="NChar(15)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this._Fax = value;
				}
			}
		}
		
		[Column(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Table_OriginalPhotosArchive")]
	public partial class Table_OriginalPhotosArchive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhotoId;
		
		private System.Data.Linq.Binary _ImageData;
		
		private int _CategoryId;
		
		private string _Caption;
		
		private System.DateTime _Date;
		
		private string _Name;
		
		private string _AlternateText;
		
		private string _Description;
		
		private System.Nullable<int> _Width;
		
		private System.Nullable<int> _Height;
		
		private EntitySet<Table_LookupCategory> _Table_LookupCategories;
		
		private EntityRef<Table_PhotosArchive> _Table_PhotosArchive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhotoIdChanging(int value);
    partial void OnPhotoIdChanged();
    partial void OnImageDataChanging(System.Data.Linq.Binary value);
    partial void OnImageDataChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnCaptionChanging(string value);
    partial void OnCaptionChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAlternateTextChanging(string value);
    partial void OnAlternateTextChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnWidthChanging(System.Nullable<int> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    #endregion
		
		public Table_OriginalPhotosArchive()
		{
			this._Table_LookupCategories = new EntitySet<Table_LookupCategory>(new Action<Table_LookupCategory>(this.attach_Table_LookupCategories), new Action<Table_LookupCategory>(this.detach_Table_LookupCategories));
			this._Table_PhotosArchive = default(EntityRef<Table_PhotosArchive>);
			OnCreated();
		}
		
		[Column(Storage="_PhotoId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PhotoId
		{
			get
			{
				return this._PhotoId;
			}
			set
			{
				if ((this._PhotoId != value))
				{
					if (this._Table_PhotosArchive.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhotoIdChanging(value);
					this.SendPropertyChanging();
					this._PhotoId = value;
					this.SendPropertyChanged("PhotoId");
					this.OnPhotoIdChanged();
				}
			}
		}
		
		[Column(Storage="_ImageData", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImageData
		{
			get
			{
				return this._ImageData;
			}
			set
			{
				if ((this._ImageData != value))
				{
					this.OnImageDataChanging(value);
					this.SendPropertyChanging();
					this._ImageData = value;
					this.SendPropertyChanged("ImageData");
					this.OnImageDataChanged();
				}
			}
		}
		
		[Column(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[Column(Storage="_Caption", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Caption
		{
			get
			{
				return this._Caption;
			}
			set
			{
				if ((this._Caption != value))
				{
					this.OnCaptionChanging(value);
					this.SendPropertyChanging();
					this._Caption = value;
					this.SendPropertyChanged("Caption");
					this.OnCaptionChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_AlternateText", DbType="NVarChar(50)")]
		public string AlternateText
		{
			get
			{
				return this._AlternateText;
			}
			set
			{
				if ((this._AlternateText != value))
				{
					this.OnAlternateTextChanging(value);
					this.SendPropertyChanging();
					this._AlternateText = value;
					this.SendPropertyChanged("AlternateText");
					this.OnAlternateTextChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(150)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Width", DbType="Int")]
		public System.Nullable<int> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[Column(Storage="_Height", DbType="Int")]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[Association(Name="Table_OriginalPhotosArchive_Table_LookupCategory", Storage="_Table_LookupCategories", ThisKey="CategoryId", OtherKey="CatId")]
		public EntitySet<Table_LookupCategory> Table_LookupCategories
		{
			get
			{
				return this._Table_LookupCategories;
			}
			set
			{
				this._Table_LookupCategories.Assign(value);
			}
		}
		
		[Association(Name="Table_PhotosArchive_Table_OriginalPhotosArchive", Storage="_Table_PhotosArchive", ThisKey="PhotoId", OtherKey="OriginalPhotoId", IsForeignKey=true)]
		public Table_PhotosArchive Table_PhotosArchive
		{
			get
			{
				return this._Table_PhotosArchive.Entity;
			}
			set
			{
				Table_PhotosArchive previousValue = this._Table_PhotosArchive.Entity;
				if (((previousValue != value) 
							|| (this._Table_PhotosArchive.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Table_PhotosArchive.Entity = null;
						previousValue.Table_OriginalPhotosArchives.Remove(this);
					}
					this._Table_PhotosArchive.Entity = value;
					if ((value != null))
					{
						value.Table_OriginalPhotosArchives.Add(this);
						this._PhotoId = value.OriginalPhotoId;
					}
					else
					{
						this._PhotoId = default(int);
					}
					this.SendPropertyChanged("Table_PhotosArchive");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Table_LookupCategories(Table_LookupCategory entity)
		{
			this.SendPropertyChanging();
			entity.Table_OriginalPhotosArchive = this;
		}
		
		private void detach_Table_LookupCategories(Table_LookupCategory entity)
		{
			this.SendPropertyChanging();
			entity.Table_OriginalPhotosArchive = null;
		}
	}
}
#pragma warning restore 1591
