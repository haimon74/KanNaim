#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DbSql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="10info")]
	public partial class DataClassesKanNaimDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTable_LookupArticleStatus(Table_LookupArticleStatus instance);
    partial void UpdateTable_LookupArticleStatus(Table_LookupArticleStatus instance);
    partial void DeleteTable_LookupArticleStatus(Table_LookupArticleStatus instance);
    partial void InsertTable_LookupBannerOwner(Table_LookupBannerOwner instance);
    partial void UpdateTable_LookupBannerOwner(Table_LookupBannerOwner instance);
    partial void DeleteTable_LookupBannerOwner(Table_LookupBannerOwner instance);
    partial void InsertTable_LookupCategory(Table_LookupCategory instance);
    partial void UpdateTable_LookupCategory(Table_LookupCategory instance);
    partial void DeleteTable_LookupCategory(Table_LookupCategory instance);
    partial void InsertTable_LookupIndex(Table_LookupIndex instance);
    partial void UpdateTable_LookupIndex(Table_LookupIndex instance);
    partial void DeleteTable_LookupIndex(Table_LookupIndex instance);
    partial void InsertTable_LookupPhotoType(Table_LookupPhotoType instance);
    partial void UpdateTable_LookupPhotoType(Table_LookupPhotoType instance);
    partial void DeleteTable_LookupPhotoType(Table_LookupPhotoType instance);
    partial void InsertTable_LookupRole(Table_LookupRole instance);
    partial void UpdateTable_LookupRole(Table_LookupRole instance);
    partial void DeleteTable_LookupRole(Table_LookupRole instance);
    partial void InsertTable_Mivzakim(Table_Mivzakim instance);
    partial void UpdateTable_Mivzakim(Table_Mivzakim instance);
    partial void DeleteTable_Mivzakim(Table_Mivzakim instance);
    partial void InsertTable_Article(Table_Article instance);
    partial void UpdateTable_Article(Table_Article instance);
    partial void DeleteTable_Article(Table_Article instance);
    partial void InsertTable_OriginalPhotosArchive(Table_OriginalPhotosArchive instance);
    partial void UpdateTable_OriginalPhotosArchive(Table_OriginalPhotosArchive instance);
    partial void DeleteTable_OriginalPhotosArchive(Table_OriginalPhotosArchive instance);
    partial void InsertTable_PhotosArchive(Table_PhotosArchive instance);
    partial void UpdateTable_PhotosArchive(Table_PhotosArchive instance);
    partial void DeleteTable_PhotosArchive(Table_PhotosArchive instance);
    partial void InsertTable_User(Table_User instance);
    partial void UpdateTable_User(Table_User instance);
    partial void DeleteTable_User(Table_User instance);
    partial void InsertTable_VideosArchive(Table_VideosArchive instance);
    partial void UpdateTable_VideosArchive(Table_VideosArchive instance);
    partial void DeleteTable_VideosArchive(Table_VideosArchive instance);
    partial void InsertTable_LinksPageBottom(Table_LinksPageBottom instance);
    partial void UpdateTable_LinksPageBottom(Table_LinksPageBottom instance);
    partial void DeleteTable_LinksPageBottom(Table_LinksPageBottom instance);
    partial void InsertTable_LinksPrefered(Table_LinksPrefered instance);
    partial void UpdateTable_LinksPrefered(Table_LinksPrefered instance);
    partial void DeleteTable_LinksPrefered(Table_LinksPrefered instance);
    partial void InsertTable_Taktzirim(Table_Taktzirim instance);
    partial void UpdateTable_Taktzirim(Table_Taktzirim instance);
    partial void DeleteTable_Taktzirim(Table_Taktzirim instance);
    partial void InsertTable_Broadcast(Table_Broadcast instance);
    partial void UpdateTable_Broadcast(Table_Broadcast instance);
    partial void DeleteTable_Broadcast(Table_Broadcast instance);
    partial void InsertTable_LookupTakType(Table_LookupTakType instance);
    partial void UpdateTable_LookupTakType(Table_LookupTakType instance);
    partial void DeleteTable_LookupTakType(Table_LookupTakType instance);
    #endregion
		
		public DataClassesKanNaimDataContext() : 
				base(global::DbSql.Properties.Settings.Default._10infoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesKanNaimDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesKanNaimDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesKanNaimDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesKanNaimDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Table_LookupArticleStatus> Table_LookupArticleStatus
		{
			get
			{
				return this.GetTable<Table_LookupArticleStatus>();
			}
		}
		
		public System.Data.Linq.Table<Table_LookupBannerOwner> Table_LookupBannerOwners
		{
			get
			{
				return this.GetTable<Table_LookupBannerOwner>();
			}
		}
		
		public System.Data.Linq.Table<Table_LookupCategory> Table_LookupCategories
		{
			get
			{
				return this.GetTable<Table_LookupCategory>();
			}
		}
		
		public System.Data.Linq.Table<Table_LookupIndex> Table_LookupIndexes
		{
			get
			{
				return this.GetTable<Table_LookupIndex>();
			}
		}
		
		public System.Data.Linq.Table<Table_LookupPhotoType> Table_LookupPhotoTypes
		{
			get
			{
				return this.GetTable<Table_LookupPhotoType>();
			}
		}
		
		public System.Data.Linq.Table<Table_LookupReporter> Table_LookupReporters
		{
			get
			{
				return this.GetTable<Table_LookupReporter>();
			}
		}
		
		public System.Data.Linq.Table<Table_LookupRole> Table_LookupRoles
		{
			get
			{
				return this.GetTable<Table_LookupRole>();
			}
		}
		
		public System.Data.Linq.Table<Table_MenuRightSide> Table_MenuRightSides
		{
			get
			{
				return this.GetTable<Table_MenuRightSide>();
			}
		}
		
		public System.Data.Linq.Table<Table_MenuTop> Table_MenuTops
		{
			get
			{
				return this.GetTable<Table_MenuTop>();
			}
		}
		
		public System.Data.Linq.Table<Table_Mivzakim> Table_Mivzakims
		{
			get
			{
				return this.GetTable<Table_Mivzakim>();
			}
		}
		
		public System.Data.Linq.Table<Table_Article> Table_Articles
		{
			get
			{
				return this.GetTable<Table_Article>();
			}
		}
		
		public System.Data.Linq.Table<Table_OriginalPhotosArchive> Table_OriginalPhotosArchives
		{
			get
			{
				return this.GetTable<Table_OriginalPhotosArchive>();
			}
		}
		
		public System.Data.Linq.Table<Table_PhotosArchive> Table_PhotosArchives
		{
			get
			{
				return this.GetTable<Table_PhotosArchive>();
			}
		}
		
		public System.Data.Linq.Table<Table_RSS> Table_RSSes
		{
			get
			{
				return this.GetTable<Table_RSS>();
			}
		}
		
		public System.Data.Linq.Table<Table_User> Table_Users
		{
			get
			{
				return this.GetTable<Table_User>();
			}
		}
		
		public System.Data.Linq.Table<Table_VideosArchive> Table_VideosArchives
		{
			get
			{
				return this.GetTable<Table_VideosArchive>();
			}
		}
		
		public System.Data.Linq.Table<Table_LinksPageBottom> Table_LinksPageBottoms
		{
			get
			{
				return this.GetTable<Table_LinksPageBottom>();
			}
		}
		
		public System.Data.Linq.Table<Table_LinksPrefered> Table_LinksPrefereds
		{
			get
			{
				return this.GetTable<Table_LinksPrefered>();
			}
		}
		
		public System.Data.Linq.Table<Table_Taktzirim> Table_Taktzirims
		{
			get
			{
				return this.GetTable<Table_Taktzirim>();
			}
		}
		
		public System.Data.Linq.Table<Table_Broadcast> Table_Broadcasts
		{
			get
			{
				return this.GetTable<Table_Broadcast>();
			}
		}
		
		public System.Data.Linq.Table<Table_LookupTakType> Table_LookupTakTypes
		{
			get
			{
				return this.GetTable<Table_LookupTakType>();
			}
		}
	}
	
	[Table(Name="dbo.Table_LookupArticleStatus")]
	public partial class Table_LookupArticleStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusId;
		
		private string _StatusDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIdChanging(int value);
    partial void OnStatusIdChanged();
    partial void OnStatusDescriptionChanging(string value);
    partial void OnStatusDescriptionChanged();
    #endregion
		
		public Table_LookupArticleStatus()
		{
			OnCreated();
		}
		
		[Column(Storage="_StatusId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[Column(Storage="_StatusDescription", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string StatusDescription
		{
			get
			{
				return this._StatusDescription;
			}
			set
			{
				if ((this._StatusDescription != value))
				{
					this.OnStatusDescriptionChanging(value);
					this.SendPropertyChanging();
					this._StatusDescription = value;
					this.SendPropertyChanged("StatusDescription");
					this.OnStatusDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Table_LookupBannerOwners")]
	public partial class Table_LookupBannerOwner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BannerOwnerId;
		
		private string _OwnerName;
		
		private string _OwnerDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBannerOwnerIdChanging(int value);
    partial void OnBannerOwnerIdChanged();
    partial void OnOwnerNameChanging(string value);
    partial void OnOwnerNameChanged();
    partial void OnOwnerDescriptionChanging(string value);
    partial void OnOwnerDescriptionChanged();
    #endregion
		
		public Table_LookupBannerOwner()
		{
			OnCreated();
		}
		
		[Column(Storage="_BannerOwnerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BannerOwnerId
		{
			get
			{
				return this._BannerOwnerId;
			}
			set
			{
				if ((this._BannerOwnerId != value))
				{
					this.OnBannerOwnerIdChanging(value);
					this.SendPropertyChanging();
					this._BannerOwnerId = value;
					this.SendPropertyChanged("BannerOwnerId");
					this.OnBannerOwnerIdChanged();
				}
			}
		}
		
		[Column(Storage="_OwnerName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string OwnerName
		{
			get
			{
				return this._OwnerName;
			}
			set
			{
				if ((this._OwnerName != value))
				{
					this.OnOwnerNameChanging(value);
					this.SendPropertyChanging();
					this._OwnerName = value;
					this.SendPropertyChanged("OwnerName");
					this.OnOwnerNameChanged();
				}
			}
		}
		
		[Column(Storage="_OwnerDescription", DbType="NVarChar(50)")]
		public string OwnerDescription
		{
			get
			{
				return this._OwnerDescription;
			}
			set
			{
				if ((this._OwnerDescription != value))
				{
					this.OnOwnerDescriptionChanging(value);
					this.SendPropertyChanging();
					this._OwnerDescription = value;
					this.SendPropertyChanged("OwnerDescription");
					this.OnOwnerDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Table_LookupCategories")]
	public partial class Table_LookupCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatId;
		
		private int _ParentCatId;
		
		private string _CatHebrewName;
		
		private string _CatEnglishName;
		
		private string _Tags;
		
		private string _RelatedCatIds;
		
		private System.Nullable<int> _PhotoId;
		
		private System.Nullable<int> _RssId;
		
		private string _MetaTags;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatIdChanging(int value);
    partial void OnCatIdChanged();
    partial void OnParentCatIdChanging(int value);
    partial void OnParentCatIdChanged();
    partial void OnCatHebrewNameChanging(string value);
    partial void OnCatHebrewNameChanged();
    partial void OnCatEnglishNameChanging(string value);
    partial void OnCatEnglishNameChanged();
    partial void OnTagsChanging(string value);
    partial void OnTagsChanged();
    partial void OnRelatedCatIdsChanging(string value);
    partial void OnRelatedCatIdsChanged();
    partial void OnPhotoIdChanging(System.Nullable<int> value);
    partial void OnPhotoIdChanged();
    partial void OnRssIdChanging(System.Nullable<int> value);
    partial void OnRssIdChanged();
    partial void OnMetaTagsChanging(string value);
    partial void OnMetaTagsChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Table_LookupCategory()
		{
			OnCreated();
		}
		
		[Column(Storage="_CatId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatId
		{
			get
			{
				return this._CatId;
			}
			set
			{
				if ((this._CatId != value))
				{
					this.OnCatIdChanging(value);
					this.SendPropertyChanging();
					this._CatId = value;
					this.SendPropertyChanged("CatId");
					this.OnCatIdChanged();
				}
			}
		}
		
		[Column(Storage="_ParentCatId", DbType="Int NOT NULL")]
		public int ParentCatId
		{
			get
			{
				return this._ParentCatId;
			}
			set
			{
				if ((this._ParentCatId != value))
				{
					this.OnParentCatIdChanging(value);
					this.SendPropertyChanging();
					this._ParentCatId = value;
					this.SendPropertyChanged("ParentCatId");
					this.OnParentCatIdChanged();
				}
			}
		}
		
		[Column(Storage="_CatHebrewName", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string CatHebrewName
		{
			get
			{
				return this._CatHebrewName;
			}
			set
			{
				if ((this._CatHebrewName != value))
				{
					this.OnCatHebrewNameChanging(value);
					this.SendPropertyChanging();
					this._CatHebrewName = value;
					this.SendPropertyChanged("CatHebrewName");
					this.OnCatHebrewNameChanged();
				}
			}
		}
		
		[Column(Storage="_CatEnglishName", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string CatEnglishName
		{
			get
			{
				return this._CatEnglishName;
			}
			set
			{
				if ((this._CatEnglishName != value))
				{
					this.OnCatEnglishNameChanging(value);
					this.SendPropertyChanging();
					this._CatEnglishName = value;
					this.SendPropertyChanged("CatEnglishName");
					this.OnCatEnglishNameChanged();
				}
			}
		}
		
		[Column(Storage="_Tags", DbType="NVarChar(100)")]
		public string Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				if ((this._Tags != value))
				{
					this.OnTagsChanging(value);
					this.SendPropertyChanging();
					this._Tags = value;
					this.SendPropertyChanged("Tags");
					this.OnTagsChanged();
				}
			}
		}
		
		[Column(Storage="_RelatedCatIds", DbType="NVarChar(30)")]
		public string RelatedCatIds
		{
			get
			{
				return this._RelatedCatIds;
			}
			set
			{
				if ((this._RelatedCatIds != value))
				{
					this.OnRelatedCatIdsChanging(value);
					this.SendPropertyChanging();
					this._RelatedCatIds = value;
					this.SendPropertyChanged("RelatedCatIds");
					this.OnRelatedCatIdsChanged();
				}
			}
		}
		
		[Column(Storage="_PhotoId", DbType="Int")]
		public System.Nullable<int> PhotoId
		{
			get
			{
				return this._PhotoId;
			}
			set
			{
				if ((this._PhotoId != value))
				{
					this.OnPhotoIdChanging(value);
					this.SendPropertyChanging();
					this._PhotoId = value;
					this.SendPropertyChanged("PhotoId");
					this.OnPhotoIdChanged();
				}
			}
		}
		
		[Column(Storage="_RssId", DbType="Int")]
		public System.Nullable<int> RssId
		{
			get
			{
				return this._RssId;
			}
			set
			{
				if ((this._RssId != value))
				{
					this.OnRssIdChanging(value);
					this.SendPropertyChanging();
					this._RssId = value;
					this.SendPropertyChanged("RssId");
					this.OnRssIdChanged();
				}
			}
		}
		
		[Column(Storage="_MetaTags", DbType="NVarChar(250)")]
		public string MetaTags
		{
			get
			{
				return this._MetaTags;
			}
			set
			{
				if ((this._MetaTags != value))
				{
					this.OnMetaTagsChanging(value);
					this.SendPropertyChanging();
					this._MetaTags = value;
					this.SendPropertyChanged("MetaTags");
					this.OnMetaTagsChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Table_LookupIndexes")]
	public partial class Table_LookupIndex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _IndexName;
		
		private int _GroupNameId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIndexNameChanging(string value);
    partial void OnIndexNameChanged();
    partial void OnGroupNameIdChanging(int value);
    partial void OnGroupNameIdChanged();
    #endregion
		
		public Table_LookupIndex()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_IndexName", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string IndexName
		{
			get
			{
				return this._IndexName;
			}
			set
			{
				if ((this._IndexName != value))
				{
					this.OnIndexNameChanging(value);
					this.SendPropertyChanging();
					this._IndexName = value;
					this.SendPropertyChanged("IndexName");
					this.OnIndexNameChanged();
				}
			}
		}
		
		[Column(Storage="_GroupNameId", DbType="Int NOT NULL")]
		public int GroupNameId
		{
			get
			{
				return this._GroupNameId;
			}
			set
			{
				if ((this._GroupNameId != value))
				{
					this.OnGroupNameIdChanging(value);
					this.SendPropertyChanging();
					this._GroupNameId = value;
					this.SendPropertyChanged("GroupNameId");
					this.OnGroupNameIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Table_LookupPhotoTypes")]
	public partial class Table_LookupPhotoType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhotoTypeId;
		
		private string _TypeDescription;
		
		private int _Width;
		
		private int _Height;
		
		private int _MaxSize;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhotoTypeIdChanging(int value);
    partial void OnPhotoTypeIdChanged();
    partial void OnTypeDescriptionChanging(string value);
    partial void OnTypeDescriptionChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    partial void OnMaxSizeChanging(int value);
    partial void OnMaxSizeChanged();
    #endregion
		
		public Table_LookupPhotoType()
		{
			OnCreated();
		}
		
		[Column(Storage="_PhotoTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhotoTypeId
		{
			get
			{
				return this._PhotoTypeId;
			}
			set
			{
				if ((this._PhotoTypeId != value))
				{
					this.OnPhotoTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PhotoTypeId = value;
					this.SendPropertyChanged("PhotoTypeId");
					this.OnPhotoTypeIdChanged();
				}
			}
		}
		
		[Column(Storage="_TypeDescription", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string TypeDescription
		{
			get
			{
				return this._TypeDescription;
			}
			set
			{
				if ((this._TypeDescription != value))
				{
					this.OnTypeDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TypeDescription = value;
					this.SendPropertyChanged("TypeDescription");
					this.OnTypeDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[Column(Storage="_Height", DbType="Int NOT NULL")]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[Column(Storage="_MaxSize", DbType="Int NOT NULL")]
		public int MaxSize
		{
			get
			{
				return this._MaxSize;
			}
			set
			{
				if ((this._MaxSize != value))
				{
					this.OnMaxSizeChanging(value);
					this.SendPropertyChanging();
					this._MaxSize = value;
					this.SendPropertyChanged("MaxSize");
					this.OnMaxSizeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Table_LookupReporters")]
	public partial class Table_LookupReporter
	{
		
		private int _UserId;
		
		private string _PublishNameShort;
		
		private string _PublishNameLong;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _MobilePhone;
		
		private string _OtherPhone;
		
		private string _Fax;
		
		private string _Address;
		
		private string _Email;
		
		public Table_LookupReporter()
		{
		}
		
		[Column(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_PublishNameShort", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string PublishNameShort
		{
			get
			{
				return this._PublishNameShort;
			}
			set
			{
				if ((this._PublishNameShort != value))
				{
					this._PublishNameShort = value;
				}
			}
		}
		
		[Column(Storage="_PublishNameLong", DbType="NVarChar(30)")]
		public string PublishNameLong
		{
			get
			{
				return this._PublishNameLong;
			}
			set
			{
				if ((this._PublishNameLong != value))
				{
					this._PublishNameLong = value;
				}
			}
		}
		
		[Column(Storage="_FirstName", DbType="NVarChar(15)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[Column(Storage="_LastName", DbType="NVarChar(15)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[Column(Storage="_MobilePhone", DbType="NChar(15)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this._MobilePhone = value;
				}
			}
		}
		
		[Column(Storage="_OtherPhone", DbType="NChar(15)")]
		public string OtherPhone
		{
			get
			{
				return this._OtherPhone;
			}
			set
			{
				if ((this._OtherPhone != value))
				{
					this._OtherPhone = value;
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="NChar(15)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this._Fax = value;
				}
			}
		}
		
		[Column(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Table_LookupRoles")]
	public partial class Table_LookupRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleId;
		
		private string _RoleDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnRoleDescriptionChanging(string value);
    partial void OnRoleDescriptionChanged();
    #endregion
		
		public Table_LookupRole()
		{
			OnCreated();
		}
		
		[Column(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[Column(Storage="_RoleDescription", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleDescription
		{
			get
			{
				return this._RoleDescription;
			}
			set
			{
				if ((this._RoleDescription != value))
				{
					this.OnRoleDescriptionChanging(value);
					this.SendPropertyChanging();
					this._RoleDescription = value;
					this.SendPropertyChanged("RoleDescription");
					this.OnRoleDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Table_MenuRightSide")]
	public partial class Table_MenuRightSide
	{
		
		private int _ItemId;
		
		private string _DisplayText;
		
		private string _ImageUrl;
		
		private string _Url;
		
		private string _ToolTip;
		
		private int _LocationFromTheTop;
		
		private string _CssClass;
		
		private string _CssHover;
		
		public Table_MenuRightSide()
		{
		}
		
		[Column(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this._ItemId = value;
				}
			}
		}
		
		[Column(Storage="_DisplayText", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DisplayText
		{
			get
			{
				return this._DisplayText;
			}
			set
			{
				if ((this._DisplayText != value))
				{
					this._DisplayText = value;
				}
			}
		}
		
		[Column(Storage="_ImageUrl", DbType="NVarChar(50)")]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this._ImageUrl = value;
				}
			}
		}
		
		[Column(Storage="_Url", DbType="NVarChar(50)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this._Url = value;
				}
			}
		}
		
		[Column(Storage="_ToolTip", DbType="NVarChar(50)")]
		public string ToolTip
		{
			get
			{
				return this._ToolTip;
			}
			set
			{
				if ((this._ToolTip != value))
				{
					this._ToolTip = value;
				}
			}
		}
		
		[Column(Storage="_LocationFromTheTop", DbType="Int NOT NULL")]
		public int LocationFromTheTop
		{
			get
			{
				return this._LocationFromTheTop;
			}
			set
			{
				if ((this._LocationFromTheTop != value))
				{
					this._LocationFromTheTop = value;
				}
			}
		}
		
		[Column(Storage="_CssClass", DbType="NVarChar(50)")]
		public string CssClass
		{
			get
			{
				return this._CssClass;
			}
			set
			{
				if ((this._CssClass != value))
				{
					this._CssClass = value;
				}
			}
		}
		
		[Column(Storage="_CssHover", DbType="NVarChar(50)")]
		public string CssHover
		{
			get
			{
				return this._CssHover;
			}
			set
			{
				if ((this._CssHover != value))
				{
					this._CssHover = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Table_MenuTop")]
	public partial class Table_MenuTop
	{
		
		private int _ItemId;
		
		private string _DisplayText;
		
		private string _ImageUrl;
		
		private string _Url;
		
		private string _ToolTip;
		
		private int _LocationFromTheRight;
		
		private string _CssClass;
		
		private string _CssHover;
		
		public Table_MenuTop()
		{
		}
		
		[Column(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this._ItemId = value;
				}
			}
		}
		
		[Column(Storage="_DisplayText", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DisplayText
		{
			get
			{
				return this._DisplayText;
			}
			set
			{
				if ((this._DisplayText != value))
				{
					this._DisplayText = value;
				}
			}
		}
		
		[Column(Storage="_ImageUrl", DbType="NVarChar(50)")]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this._ImageUrl = value;
				}
			}
		}
		
		[Column(Storage="_Url", DbType="NVarChar(50)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this._Url = value;
				}
			}
		}
		
		[Column(Storage="_ToolTip", DbType="NVarChar(50)")]
		public string ToolTip
		{
			get
			{
				return this._ToolTip;
			}
			set
			{
				if ((this._ToolTip != value))
				{
					this._ToolTip = value;
				}
			}
		}
		
		[Column(Storage="_LocationFromTheRight", DbType="Int NOT NULL")]
		public int LocationFromTheRight
		{
			get
			{
				return this._LocationFromTheRight;
			}
			set
			{
				if ((this._LocationFromTheRight != value))
				{
					this._LocationFromTheRight = value;
				}
			}
		}
		
		[Column(Storage="_CssClass", DbType="NVarChar(50)")]
		public string CssClass
		{
			get
			{
				return this._CssClass;
			}
			set
			{
				if ((this._CssClass != value))
				{
					this._CssClass = value;
				}
			}
		}
		
		[Column(Storage="_CssHover", DbType="NVarChar(50)")]
		public string CssHover
		{
			get
			{
				return this._CssHover;
			}
			set
			{
				if ((this._CssHover != value))
				{
					this._CssHover = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Table_Mivzakim")]
	public partial class Table_Mivzakim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatId;
		
		private System.Nullable<System.DateTime> _Mivzak7_ArticleId;
		
		private System.Nullable<System.DateTime> _Mivzak6_ArticleId;
		
		private System.Nullable<System.DateTime> _Mivzak5_ArticleId;
		
		private System.Nullable<System.DateTime> _Mivzak4_ArticleId;
		
		private System.Nullable<System.DateTime> _Mivzak3_ArticleId;
		
		private string _Mivzak2_ArticleId;
		
		private string _Mivzak1_ArticleId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatIdChanging(int value);
    partial void OnCatIdChanged();
    partial void OnMivzak7_ArticleIdChanging(System.Nullable<System.DateTime> value);
    partial void OnMivzak7_ArticleIdChanged();
    partial void OnMivzak6_ArticleIdChanging(System.Nullable<System.DateTime> value);
    partial void OnMivzak6_ArticleIdChanged();
    partial void OnMivzak5_ArticleIdChanging(System.Nullable<System.DateTime> value);
    partial void OnMivzak5_ArticleIdChanged();
    partial void OnMivzak4_ArticleIdChanging(System.Nullable<System.DateTime> value);
    partial void OnMivzak4_ArticleIdChanged();
    partial void OnMivzak3_ArticleIdChanging(System.Nullable<System.DateTime> value);
    partial void OnMivzak3_ArticleIdChanged();
    partial void OnMivzak2_ArticleIdChanging(string value);
    partial void OnMivzak2_ArticleIdChanged();
    partial void OnMivzak1_ArticleIdChanging(string value);
    partial void OnMivzak1_ArticleIdChanged();
    #endregion
		
		public Table_Mivzakim()
		{
			OnCreated();
		}
		
		[Column(Storage="_CatId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatId
		{
			get
			{
				return this._CatId;
			}
			set
			{
				if ((this._CatId != value))
				{
					this.OnCatIdChanging(value);
					this.SendPropertyChanging();
					this._CatId = value;
					this.SendPropertyChanged("CatId");
					this.OnCatIdChanged();
				}
			}
		}
		
		[Column(Storage="_Mivzak7_ArticleId", DbType="DateTime")]
		public System.Nullable<System.DateTime> Mivzak7_ArticleId
		{
			get
			{
				return this._Mivzak7_ArticleId;
			}
			set
			{
				if ((this._Mivzak7_ArticleId != value))
				{
					this.OnMivzak7_ArticleIdChanging(value);
					this.SendPropertyChanging();
					this._Mivzak7_ArticleId = value;
					this.SendPropertyChanged("Mivzak7_ArticleId");
					this.OnMivzak7_ArticleIdChanged();
				}
			}
		}
		
		[Column(Storage="_Mivzak6_ArticleId", DbType="DateTime")]
		public System.Nullable<System.DateTime> Mivzak6_ArticleId
		{
			get
			{
				return this._Mivzak6_ArticleId;
			}
			set
			{
				if ((this._Mivzak6_ArticleId != value))
				{
					this.OnMivzak6_ArticleIdChanging(value);
					this.SendPropertyChanging();
					this._Mivzak6_ArticleId = value;
					this.SendPropertyChanged("Mivzak6_ArticleId");
					this.OnMivzak6_ArticleIdChanged();
				}
			}
		}
		
		[Column(Storage="_Mivzak5_ArticleId", DbType="DateTime")]
		public System.Nullable<System.DateTime> Mivzak5_ArticleId
		{
			get
			{
				return this._Mivzak5_ArticleId;
			}
			set
			{
				if ((this._Mivzak5_ArticleId != value))
				{
					this.OnMivzak5_ArticleIdChanging(value);
					this.SendPropertyChanging();
					this._Mivzak5_ArticleId = value;
					this.SendPropertyChanged("Mivzak5_ArticleId");
					this.OnMivzak5_ArticleIdChanged();
				}
			}
		}
		
		[Column(Storage="_Mivzak4_ArticleId", DbType="DateTime")]
		public System.Nullable<System.DateTime> Mivzak4_ArticleId
		{
			get
			{
				return this._Mivzak4_ArticleId;
			}
			set
			{
				if ((this._Mivzak4_ArticleId != value))
				{
					this.OnMivzak4_ArticleIdChanging(value);
					this.SendPropertyChanging();
					this._Mivzak4_ArticleId = value;
					this.SendPropertyChanged("Mivzak4_ArticleId");
					this.OnMivzak4_ArticleIdChanged();
				}
			}
		}
		
		[Column(Storage="_Mivzak3_ArticleId", DbType="DateTime")]
		public System.Nullable<System.DateTime> Mivzak3_ArticleId
		{
			get
			{
				return this._Mivzak3_ArticleId;
			}
			set
			{
				if ((this._Mivzak3_ArticleId != value))
				{
					this.OnMivzak3_ArticleIdChanging(value);
					this.SendPropertyChanging();
					this._Mivzak3_ArticleId = value;
					this.SendPropertyChanged("Mivzak3_ArticleId");
					this.OnMivzak3_ArticleIdChanged();
				}
			}
		}
		
		[Column(Storage="_Mivzak2_ArticleId", DbType="NChar(20)")]
		public string Mivzak2_ArticleId
		{
			get
			{
				return this._Mivzak2_ArticleId;
			}
			set
			{
				if ((this._Mivzak2_ArticleId != value))
				{
					this.OnMivzak2_ArticleIdChanging(value);
					this.SendPropertyChanging();
					this._Mivzak2_ArticleId = value;
					this.SendPropertyChanged("Mivzak2_ArticleId");
					this.OnMivzak2_ArticleIdChanged();
				}
			}
		}
		
		[Column(Storage="_Mivzak1_ArticleId", DbType="NChar(20)")]
		public string Mivzak1_ArticleId
		{
			get
			{
				return this._Mivzak1_ArticleId;
			}
			set
			{
				if ((this._Mivzak1_ArticleId != value))
				{
					this.OnMivzak1_ArticleIdChanging(value);
					this.SendPropertyChanging();
					this._Mivzak1_ArticleId = value;
					this.SendPropertyChanged("Mivzak1_ArticleId");
					this.OnMivzak1_ArticleIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Table_Articles")]
	public partial class Table_Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArticleId;
		
		private int _CategoryId;
		
		private bool _IsPublished;
		
		private int _StatusId;
		
		private string _Title;
		
		private string _SubTitle;
		
		private string _ArticleContent;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _CreateDate;
		
		private int _CreatedBy;
		
		private int _UpdatedBy;
		
		private bool _FlagShowDateTime;
		
		private bool _FlagActiveRSS;
		
		private bool _FlagActiveMivzak;
		
		private bool _FlagTak3ColPicTxt;
		
		private bool _FlagTak3ColPic;
		
		private bool _FlagTak3ColTxt;
		
		private bool _FlagTak2ColPicTxt;
		
		private bool _FlagTak2ColPic;
		
		private bool _FlagTak2ColTxt;
		
		private bool _FlagTak1ColPicTxt;
		
		private bool _FlagTak1ColPic;
		
		private bool _FlagTak1ColTxt;
		
		private bool _FlagTakSmallPicTxt;
		
		private bool _FlagTakSmallPic;
		
		private bool _FlagTakSmallTxt;
		
		private bool _FlagTakLineFeeds;
		
		private int _CountViews;
		
		private string _Summery;
		
		private System.Nullable<int> _CountComments;
		
		private int _ImageId;
		
		private int _EmbedObjId;
		
		private string _MetaTags;
		
		private string _KeysLookup;
		
		private string _KeysAssociated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnIsPublishedChanging(bool value);
    partial void OnIsPublishedChanged();
    partial void OnStatusIdChanging(int value);
    partial void OnStatusIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSubTitleChanging(string value);
    partial void OnSubTitleChanged();
    partial void OnArticleContentChanging(string value);
    partial void OnArticleContentChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnFlagShowDateTimeChanging(bool value);
    partial void OnFlagShowDateTimeChanged();
    partial void OnFlagActiveRSSChanging(bool value);
    partial void OnFlagActiveRSSChanged();
    partial void OnFlagActiveMivzakChanging(bool value);
    partial void OnFlagActiveMivzakChanged();
    partial void OnFlagTak3ColPicTxtChanging(bool value);
    partial void OnFlagTak3ColPicTxtChanged();
    partial void OnFlagTak3ColPicChanging(bool value);
    partial void OnFlagTak3ColPicChanged();
    partial void OnFlagTak3ColTxtChanging(bool value);
    partial void OnFlagTak3ColTxtChanged();
    partial void OnFlagTak2ColPicTxtChanging(bool value);
    partial void OnFlagTak2ColPicTxtChanged();
    partial void OnFlagTak2ColPicChanging(bool value);
    partial void OnFlagTak2ColPicChanged();
    partial void OnFlagTak2ColTxtChanging(bool value);
    partial void OnFlagTak2ColTxtChanged();
    partial void OnFlagTak1ColPicTxtChanging(bool value);
    partial void OnFlagTak1ColPicTxtChanged();
    partial void OnFlagTak1ColPicChanging(bool value);
    partial void OnFlagTak1ColPicChanged();
    partial void OnFlagTak1ColTxtChanging(bool value);
    partial void OnFlagTak1ColTxtChanged();
    partial void OnFlagTakSmallPicTxtChanging(bool value);
    partial void OnFlagTakSmallPicTxtChanged();
    partial void OnFlagTakSmallPicChanging(bool value);
    partial void OnFlagTakSmallPicChanged();
    partial void OnFlagTakSmallTxtChanging(bool value);
    partial void OnFlagTakSmallTxtChanged();
    partial void OnFlagTakLineFeedsChanging(bool value);
    partial void OnFlagTakLineFeedsChanged();
    partial void OnCountViewsChanging(int value);
    partial void OnCountViewsChanged();
    partial void OnSummeryChanging(string value);
    partial void OnSummeryChanged();
    partial void OnCountCommentsChanging(System.Nullable<int> value);
    partial void OnCountCommentsChanged();
    partial void OnImageIdChanging(int value);
    partial void OnImageIdChanged();
    partial void OnEmbedObjIdChanging(int value);
    partial void OnEmbedObjIdChanged();
    partial void OnMetaTagsChanging(string value);
    partial void OnMetaTagsChanged();
    partial void OnKeysLookupChanging(string value);
    partial void OnKeysLookupChanged();
    partial void OnKeysAssociatedChanging(string value);
    partial void OnKeysAssociatedChanged();
    #endregion
		
		public Table_Article()
		{
			OnCreated();
		}
		
		[Column(Storage="_ArticleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[Column(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[Column(Storage="_IsPublished", DbType="Bit NOT NULL")]
		public bool IsPublished
		{
			get
			{
				return this._IsPublished;
			}
			set
			{
				if ((this._IsPublished != value))
				{
					this.OnIsPublishedChanging(value);
					this.SendPropertyChanging();
					this._IsPublished = value;
					this.SendPropertyChanged("IsPublished");
					this.OnIsPublishedChanged();
				}
			}
		}
		
		[Column(Storage="_StatusId", DbType="Int NOT NULL")]
		public int StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_SubTitle", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SubTitle
		{
			get
			{
				return this._SubTitle;
			}
			set
			{
				if ((this._SubTitle != value))
				{
					this.OnSubTitleChanging(value);
					this.SendPropertyChanging();
					this._SubTitle = value;
					this.SendPropertyChanged("SubTitle");
					this.OnSubTitleChanged();
				}
			}
		}
		
		[Column(Storage="_ArticleContent", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ArticleContent
		{
			get
			{
				return this._ArticleContent;
			}
			set
			{
				if ((this._ArticleContent != value))
				{
					this.OnArticleContentChanging(value);
					this.SendPropertyChanging();
					this._ArticleContent = value;
					this.SendPropertyChanged("ArticleContent");
					this.OnArticleContentChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
	    public long UpdateTicks
	    {
	        get
	        {
	            return _UpdateDate.Ticks;
	        }
	    }

		[Column(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[Column(Storage="_FlagShowDateTime", DbType="Bit NOT NULL")]
		public bool FlagShowDateTime
		{
			get
			{
				return this._FlagShowDateTime;
			}
			set
			{
				if ((this._FlagShowDateTime != value))
				{
					this.OnFlagShowDateTimeChanging(value);
					this.SendPropertyChanging();
					this._FlagShowDateTime = value;
					this.SendPropertyChanged("FlagShowDateTime");
					this.OnFlagShowDateTimeChanged();
				}
			}
		}
		
		[Column(Storage="_FlagActiveRSS", DbType="Bit NOT NULL")]
		public bool FlagActiveRSS
		{
			get
			{
				return this._FlagActiveRSS;
			}
			set
			{
				if ((this._FlagActiveRSS != value))
				{
					this.OnFlagActiveRSSChanging(value);
					this.SendPropertyChanging();
					this._FlagActiveRSS = value;
					this.SendPropertyChanged("FlagActiveRSS");
					this.OnFlagActiveRSSChanged();
				}
			}
		}
		
		[Column(Storage="_FlagActiveMivzak", DbType="Bit NOT NULL")]
		public bool FlagActiveMivzak
		{
			get
			{
				return this._FlagActiveMivzak;
			}
			set
			{
				if ((this._FlagActiveMivzak != value))
				{
					this.OnFlagActiveMivzakChanging(value);
					this.SendPropertyChanging();
					this._FlagActiveMivzak = value;
					this.SendPropertyChanged("FlagActiveMivzak");
					this.OnFlagActiveMivzakChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTak3ColPicTxt", DbType="Bit NOT NULL")]
		public bool FlagTak3ColPicTxt
		{
			get
			{
				return this._FlagTak3ColPicTxt;
			}
			set
			{
				if ((this._FlagTak3ColPicTxt != value))
				{
					this.OnFlagTak3ColPicTxtChanging(value);
					this.SendPropertyChanging();
					this._FlagTak3ColPicTxt = value;
					this.SendPropertyChanged("FlagTak3ColPicTxt");
					this.OnFlagTak3ColPicTxtChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTak3ColPic", DbType="Bit NOT NULL")]
		public bool FlagTak3ColPic
		{
			get
			{
				return this._FlagTak3ColPic;
			}
			set
			{
				if ((this._FlagTak3ColPic != value))
				{
					this.OnFlagTak3ColPicChanging(value);
					this.SendPropertyChanging();
					this._FlagTak3ColPic = value;
					this.SendPropertyChanged("FlagTak3ColPic");
					this.OnFlagTak3ColPicChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTak3ColTxt", DbType="Bit NOT NULL")]
		public bool FlagTak3ColTxt
		{
			get
			{
				return this._FlagTak3ColTxt;
			}
			set
			{
				if ((this._FlagTak3ColTxt != value))
				{
					this.OnFlagTak3ColTxtChanging(value);
					this.SendPropertyChanging();
					this._FlagTak3ColTxt = value;
					this.SendPropertyChanged("FlagTak3ColTxt");
					this.OnFlagTak3ColTxtChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTak2ColPicTxt", DbType="Bit NOT NULL")]
		public bool FlagTak2ColPicTxt
		{
			get
			{
				return this._FlagTak2ColPicTxt;
			}
			set
			{
				if ((this._FlagTak2ColPicTxt != value))
				{
					this.OnFlagTak2ColPicTxtChanging(value);
					this.SendPropertyChanging();
					this._FlagTak2ColPicTxt = value;
					this.SendPropertyChanged("FlagTak2ColPicTxt");
					this.OnFlagTak2ColPicTxtChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTak2ColPic", DbType="Bit NOT NULL")]
		public bool FlagTak2ColPic
		{
			get
			{
				return this._FlagTak2ColPic;
			}
			set
			{
				if ((this._FlagTak2ColPic != value))
				{
					this.OnFlagTak2ColPicChanging(value);
					this.SendPropertyChanging();
					this._FlagTak2ColPic = value;
					this.SendPropertyChanged("FlagTak2ColPic");
					this.OnFlagTak2ColPicChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTak2ColTxt", DbType="Bit NOT NULL")]
		public bool FlagTak2ColTxt
		{
			get
			{
				return this._FlagTak2ColTxt;
			}
			set
			{
				if ((this._FlagTak2ColTxt != value))
				{
					this.OnFlagTak2ColTxtChanging(value);
					this.SendPropertyChanging();
					this._FlagTak2ColTxt = value;
					this.SendPropertyChanged("FlagTak2ColTxt");
					this.OnFlagTak2ColTxtChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTak1ColPicTxt", DbType="Bit NOT NULL")]
		public bool FlagTak1ColPicTxt
		{
			get
			{
				return this._FlagTak1ColPicTxt;
			}
			set
			{
				if ((this._FlagTak1ColPicTxt != value))
				{
					this.OnFlagTak1ColPicTxtChanging(value);
					this.SendPropertyChanging();
					this._FlagTak1ColPicTxt = value;
					this.SendPropertyChanged("FlagTak1ColPicTxt");
					this.OnFlagTak1ColPicTxtChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTak1ColPic", DbType="Bit NOT NULL")]
		public bool FlagTak1ColPic
		{
			get
			{
				return this._FlagTak1ColPic;
			}
			set
			{
				if ((this._FlagTak1ColPic != value))
				{
					this.OnFlagTak1ColPicChanging(value);
					this.SendPropertyChanging();
					this._FlagTak1ColPic = value;
					this.SendPropertyChanged("FlagTak1ColPic");
					this.OnFlagTak1ColPicChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTak1ColTxt", DbType="Bit NOT NULL")]
		public bool FlagTak1ColTxt
		{
			get
			{
				return this._FlagTak1ColTxt;
			}
			set
			{
				if ((this._FlagTak1ColTxt != value))
				{
					this.OnFlagTak1ColTxtChanging(value);
					this.SendPropertyChanging();
					this._FlagTak1ColTxt = value;
					this.SendPropertyChanged("FlagTak1ColTxt");
					this.OnFlagTak1ColTxtChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTakSmallPicTxt", DbType="Bit NOT NULL")]
		public bool FlagTakSmallPicTxt
		{
			get
			{
				return this._FlagTakSmallPicTxt;
			}
			set
			{
				if ((this._FlagTakSmallPicTxt != value))
				{
					this.OnFlagTakSmallPicTxtChanging(value);
					this.SendPropertyChanging();
					this._FlagTakSmallPicTxt = value;
					this.SendPropertyChanged("FlagTakSmallPicTxt");
					this.OnFlagTakSmallPicTxtChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTakSmallPic", DbType="Bit NOT NULL")]
		public bool FlagTakSmallPic
		{
			get
			{
				return this._FlagTakSmallPic;
			}
			set
			{
				if ((this._FlagTakSmallPic != value))
				{
					this.OnFlagTakSmallPicChanging(value);
					this.SendPropertyChanging();
					this._FlagTakSmallPic = value;
					this.SendPropertyChanged("FlagTakSmallPic");
					this.OnFlagTakSmallPicChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTakSmallTxt", DbType="Bit NOT NULL")]
		public bool FlagTakSmallTxt
		{
			get
			{
				return this._FlagTakSmallTxt;
			}
			set
			{
				if ((this._FlagTakSmallTxt != value))
				{
					this.OnFlagTakSmallTxtChanging(value);
					this.SendPropertyChanging();
					this._FlagTakSmallTxt = value;
					this.SendPropertyChanged("FlagTakSmallTxt");
					this.OnFlagTakSmallTxtChanged();
				}
			}
		}
		
		[Column(Storage="_FlagTakLineFeeds", DbType="Bit NOT NULL")]
		public bool FlagTakLineFeeds
		{
			get
			{
				return this._FlagTakLineFeeds;
			}
			set
			{
				if ((this._FlagTakLineFeeds != value))
				{
					this.OnFlagTakLineFeedsChanging(value);
					this.SendPropertyChanging();
					this._FlagTakLineFeeds = value;
					this.SendPropertyChanged("FlagTakLineFeeds");
					this.OnFlagTakLineFeedsChanged();
				}
			}
		}
		
		[Column(Storage="_CountViews", DbType="Int NOT NULL")]
		public int CountViews
		{
			get
			{
				return this._CountViews;
			}
			set
			{
				if ((this._CountViews != value))
				{
					this.OnCountViewsChanging(value);
					this.SendPropertyChanging();
					this._CountViews = value;
					this.SendPropertyChanged("CountViews");
					this.OnCountViewsChanged();
				}
			}
		}
		
		[Column(Storage="_Summery", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Summery
		{
			get
			{
				return this._Summery;
			}
			set
			{
				if ((this._Summery != value))
				{
					this.OnSummeryChanging(value);
					this.SendPropertyChanging();
					this._Summery = value;
					this.SendPropertyChanged("Summery");
					this.OnSummeryChanged();
				}
			}
		}
		
		[Column(Storage="_CountComments", DbType="Int")]
		public System.Nullable<int> CountComments
		{
			get
			{
				return this._CountComments;
			}
			set
			{
				if ((this._CountComments != value))
				{
					this.OnCountCommentsChanging(value);
					this.SendPropertyChanging();
					this._CountComments = value;
					this.SendPropertyChanged("CountComments");
					this.OnCountCommentsChanged();
				}
			}
		}
		
		[Column(Storage="_ImageId", DbType="Int NOT NULL")]
		public int ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					this.OnImageIdChanging(value);
					this.SendPropertyChanging();
					this._ImageId = value;
					this.SendPropertyChanged("ImageId");
					this.OnImageIdChanged();
				}
			}
		}
		
		[Column(Storage="_EmbedObjId", DbType="Int NOT NULL")]
		public int EmbedObjId
		{
			get
			{
				return this._EmbedObjId;
			}
			set
			{
				if ((this._EmbedObjId != value))
				{
					this.OnEmbedObjIdChanging(value);
					this.SendPropertyChanging();
					this._EmbedObjId = value;
					this.SendPropertyChanged("EmbedObjId");
					this.OnEmbedObjIdChanged();
				}
			}
		}
		
		[Column(Storage="_MetaTags", DbType="NVarChar(200)")]
		public string MetaTags
		{
			get
			{
				return this._MetaTags;
			}
			set
			{
				if ((this._MetaTags != value))
				{
					this.OnMetaTagsChanging(value);
					this.SendPropertyChanging();
					this._MetaTags = value;
					this.SendPropertyChanged("MetaTags");
					this.OnMetaTagsChanged();
				}
			}
		}
		
		[Column(Storage="_KeysLookup", DbType="NVarChar(90)")]
		public string KeysLookup
		{
			get
			{
				return this._KeysLookup;
			}
			set
			{
				if ((this._KeysLookup != value))
				{
					this.OnKeysLookupChanging(value);
					this.SendPropertyChanging();
					this._KeysLookup = value;
					this.SendPropertyChanged("KeysLookup");
					this.OnKeysLookupChanged();
				}
			}
		}
		
		[Column(Storage="_KeysAssociated", DbType="NVarChar(90)")]
		public string KeysAssociated
		{
			get
			{
				return this._KeysAssociated;
			}
			set
			{
				if ((this._KeysAssociated != value))
				{
					this.OnKeysAssociatedChanging(value);
					this.SendPropertyChanging();
					this._KeysAssociated = value;
					this.SendPropertyChanged("KeysAssociated");
					this.OnKeysAssociatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Table_OriginalPhotosArchive")]
	public partial class Table_OriginalPhotosArchive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhotoId;
		
		private System.Data.Linq.Binary _ImageData;
		
		private int _CategoryId;
		
		private string _Caption;
		
		private System.DateTime _Date;
		
		private string _Name;
		
		private string _AlternateText;
		
		private string _Description;
		
		private System.Nullable<int> _Width;
		
		private System.Nullable<int> _Height;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhotoIdChanging(int value);
    partial void OnPhotoIdChanged();
    partial void OnImageDataChanging(System.Data.Linq.Binary value);
    partial void OnImageDataChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnCaptionChanging(string value);
    partial void OnCaptionChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAlternateTextChanging(string value);
    partial void OnAlternateTextChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnWidthChanging(System.Nullable<int> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    #endregion
		
		public Table_OriginalPhotosArchive()
		{
			OnCreated();
		}
		
		[Column(Storage="_PhotoId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PhotoId
		{
			get
			{
				return this._PhotoId;
			}
			set
			{
				if ((this._PhotoId != value))
				{
					this.OnPhotoIdChanging(value);
					this.SendPropertyChanging();
					this._PhotoId = value;
					this.SendPropertyChanged("PhotoId");
					this.OnPhotoIdChanged();
				}
			}
		}
		
		[Column(Storage="_ImageData", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImageData
		{
			get
			{
				return this._ImageData;
			}
			set
			{
				if ((this._ImageData != value))
				{
					this.OnImageDataChanging(value);
					this.SendPropertyChanging();
					this._ImageData = value;
					this.SendPropertyChanged("ImageData");
					this.OnImageDataChanged();
				}
			}
		}
		
		[Column(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[Column(Storage="_Caption", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Caption
		{
			get
			{
				return this._Caption;
			}
			set
			{
				if ((this._Caption != value))
				{
					this.OnCaptionChanging(value);
					this.SendPropertyChanging();
					this._Caption = value;
					this.SendPropertyChanged("Caption");
					this.OnCaptionChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}

        public long DateTicks
        {
            get
            {
                return _Date.Ticks;
            }
        }

		[Column(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_AlternateText", DbType="NVarChar(50)")]
		public string AlternateText
		{
			get
			{
				return this._AlternateText;
			}
			set
			{
				if ((this._AlternateText != value))
				{
					this.OnAlternateTextChanging(value);
					this.SendPropertyChanging();
					this._AlternateText = value;
					this.SendPropertyChanged("AlternateText");
					this.OnAlternateTextChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(150)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Width", DbType="Int")]
		public System.Nullable<int> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[Column(Storage="_Height", DbType="Int")]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Table_PhotosArchive")]
	public partial class Table_PhotosArchive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ImageUrl;
		
		private int _PhotoTypeId;
		
		private System.DateTime _Date;
		
		private string _CssClass;
		
		private string _UrlLink;
		
		private System.Nullable<int> _LastTakId;
		
		private System.Nullable<int> _LastArticleId;
		
		private System.Nullable<int> _GalleryId;
		
		private System.Nullable<int> _Width;
		
		private System.Nullable<int> _Height;
		
		private System.Nullable<int> _OriginalPhotoId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnPhotoTypeIdChanging(int value);
    partial void OnPhotoTypeIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCssClassChanging(string value);
    partial void OnCssClassChanged();
    partial void OnUrlLinkChanging(string value);
    partial void OnUrlLinkChanged();
    partial void OnLastTakIdChanging(System.Nullable<int> value);
    partial void OnLastTakIdChanged();
    partial void OnLastArticleIdChanging(System.Nullable<int> value);
    partial void OnLastArticleIdChanged();
    partial void OnGalleryIdChanging(System.Nullable<int> value);
    partial void OnGalleryIdChanged();
    partial void OnWidthChanging(System.Nullable<int> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    partial void OnOriginalPhotoIdChanging(System.Nullable<int> value);
    partial void OnOriginalPhotoIdChanged();
    #endregion
		
		public Table_PhotosArchive()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_ImageUrl", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[Column(Storage="_PhotoTypeId", DbType="Int NOT NULL")]
		public int PhotoTypeId
		{
			get
			{
				return this._PhotoTypeId;
			}
			set
			{
				if ((this._PhotoTypeId != value))
				{
					this.OnPhotoTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PhotoTypeId = value;
					this.SendPropertyChanged("PhotoTypeId");
					this.OnPhotoTypeIdChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[Column(Storage="_CssClass", DbType="NChar(20)")]
		public string CssClass
		{
			get
			{
				return this._CssClass;
			}
			set
			{
				if ((this._CssClass != value))
				{
					this.OnCssClassChanging(value);
					this.SendPropertyChanging();
					this._CssClass = value;
					this.SendPropertyChanged("CssClass");
					this.OnCssClassChanged();
				}
			}
		}
		
		[Column(Storage="_UrlLink", DbType="NVarChar(50)")]
		public string UrlLink
		{
			get
			{
				return this._UrlLink;
			}
			set
			{
				if ((this._UrlLink != value))
				{
					this.OnUrlLinkChanging(value);
					this.SendPropertyChanging();
					this._UrlLink = value;
					this.SendPropertyChanged("UrlLink");
					this.OnUrlLinkChanged();
				}
			}
		}
		
		[Column(Storage="_LastTakId", DbType="Int")]
		public System.Nullable<int> LastTakId
		{
			get
			{
				return this._LastTakId;
			}
			set
			{
				if ((this._LastTakId != value))
				{
					this.OnLastTakIdChanging(value);
					this.SendPropertyChanging();
					this._LastTakId = value;
					this.SendPropertyChanged("LastTakId");
					this.OnLastTakIdChanged();
				}
			}
		}
		
		[Column(Storage="_LastArticleId", DbType="Int")]
		public System.Nullable<int> LastArticleId
		{
			get
			{
				return this._LastArticleId;
			}
			set
			{
				if ((this._LastArticleId != value))
				{
					this.OnLastArticleIdChanging(value);
					this.SendPropertyChanging();
					this._LastArticleId = value;
					this.SendPropertyChanged("LastArticleId");
					this.OnLastArticleIdChanged();
				}
			}
		}
		
		[Column(Storage="_GalleryId", DbType="Int")]
		public System.Nullable<int> GalleryId
		{
			get
			{
				return this._GalleryId;
			}
			set
			{
				if ((this._GalleryId != value))
				{
					this.OnGalleryIdChanging(value);
					this.SendPropertyChanging();
					this._GalleryId = value;
					this.SendPropertyChanged("GalleryId");
					this.OnGalleryIdChanged();
				}
			}
		}
		
		[Column(Storage="_Width", DbType="Int")]
		public System.Nullable<int> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[Column(Storage="_Height", DbType="Int")]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[Column(Storage="_OriginalPhotoId", DbType="Int")]
		public System.Nullable<int> OriginalPhotoId
		{
			get
			{
				return this._OriginalPhotoId;
			}
			set
			{
				if ((this._OriginalPhotoId != value))
				{
					this.OnOriginalPhotoIdChanging(value);
					this.SendPropertyChanging();
					this._OriginalPhotoId = value;
					this.SendPropertyChanged("OriginalPhotoId");
					this.OnOriginalPhotoIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Table_RSS")]
	public partial class Table_RSS
	{
		
		private int _RssId;
		
		private int _CategoryId;
		
		private int _AuthorId;
		
		private string _Title;
		
		private string _Url;
		
		private string _Description;
		
		private string _ImageUrl;
		
		public Table_RSS()
		{
		}
		
		[Column(Storage="_RssId", DbType="Int NOT NULL")]
		public int RssId
		{
			get
			{
				return this._RssId;
			}
			set
			{
				if ((this._RssId != value))
				{
					this._RssId = value;
				}
			}
		}
		
		[Column(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this._CategoryId = value;
				}
			}
		}
		
		[Column(Storage="_AuthorId", DbType="Int NOT NULL")]
		public int AuthorId
		{
			get
			{
				return this._AuthorId;
			}
			set
			{
				if ((this._AuthorId != value))
				{
					this._AuthorId = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Url", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this._Url = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_ImageUrl", DbType="NVarChar(50)")]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this._ImageUrl = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Table_Users")]
	public partial class Table_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _UserName;
		
		private int _RoleId;
		
		private string _Password;
		
		private string _PhoneNumber;
		
		private string _Email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Table_User()
		{
			OnCreated();
		}
		
		[Column(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_PhoneNumber", DbType="NVarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Table_VideosArchive")]
	public partial class Table_VideosArchive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CategoryId;
		
		private string _EmbedUrl;
		
		private string _Caption;
		
		private System.DateTime _Date;
		
		private string _CssClass;
		
		private string _AlternateText;
		
		private string _Description;
		
		private string _UrlLink;
		
		private System.Nullable<int> _LastTakId;
		
		private System.Nullable<int> _LastArticleId;
		
		private System.Nullable<int> _GalleryId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnEmbedUrlChanging(string value);
    partial void OnEmbedUrlChanged();
    partial void OnCaptionChanging(string value);
    partial void OnCaptionChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCssClassChanging(string value);
    partial void OnCssClassChanged();
    partial void OnAlternateTextChanging(string value);
    partial void OnAlternateTextChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUrlLinkChanging(string value);
    partial void OnUrlLinkChanged();
    partial void OnLastTakIdChanging(System.Nullable<int> value);
    partial void OnLastTakIdChanged();
    partial void OnLastArticleIdChanging(System.Nullable<int> value);
    partial void OnLastArticleIdChanged();
    partial void OnGalleryIdChanging(System.Nullable<int> value);
    partial void OnGalleryIdChanged();
    #endregion
		
		public Table_VideosArchive()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[Column(Storage="_EmbedUrl", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string EmbedUrl
		{
			get
			{
				return this._EmbedUrl;
			}
			set
			{
				if ((this._EmbedUrl != value))
				{
					this.OnEmbedUrlChanging(value);
					this.SendPropertyChanging();
					this._EmbedUrl = value;
					this.SendPropertyChanged("EmbedUrl");
					this.OnEmbedUrlChanged();
				}
			}
		}
		
		[Column(Storage="_Caption", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Caption
		{
			get
			{
				return this._Caption;
			}
			set
			{
				if ((this._Caption != value))
				{
					this.OnCaptionChanging(value);
					this.SendPropertyChanging();
					this._Caption = value;
					this.SendPropertyChanged("Caption");
					this.OnCaptionChanged();
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}

        public long DateTicks
        {
            get
            {
                return _Date.Ticks;
            }
        }

		[Column(Storage="_CssClass", DbType="NChar(20)")]
		public string CssClass
		{
			get
			{
				return this._CssClass;
			}
			set
			{
				if ((this._CssClass != value))
				{
					this.OnCssClassChanging(value);
					this.SendPropertyChanging();
					this._CssClass = value;
					this.SendPropertyChanged("CssClass");
					this.OnCssClassChanged();
				}
			}
		}
		
		[Column(Storage="_AlternateText", DbType="NVarChar(50)")]
		public string AlternateText
		{
			get
			{
				return this._AlternateText;
			}
			set
			{
				if ((this._AlternateText != value))
				{
					this.OnAlternateTextChanging(value);
					this.SendPropertyChanging();
					this._AlternateText = value;
					this.SendPropertyChanged("AlternateText");
					this.OnAlternateTextChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_UrlLink", DbType="NVarChar(50)")]
		public string UrlLink
		{
			get
			{
				return this._UrlLink;
			}
			set
			{
				if ((this._UrlLink != value))
				{
					this.OnUrlLinkChanging(value);
					this.SendPropertyChanging();
					this._UrlLink = value;
					this.SendPropertyChanged("UrlLink");
					this.OnUrlLinkChanged();
				}
			}
		}
		
		[Column(Storage="_LastTakId", DbType="Int")]
		public System.Nullable<int> LastTakId
		{
			get
			{
				return this._LastTakId;
			}
			set
			{
				if ((this._LastTakId != value))
				{
					this.OnLastTakIdChanging(value);
					this.SendPropertyChanging();
					this._LastTakId = value;
					this.SendPropertyChanged("LastTakId");
					this.OnLastTakIdChanged();
				}
			}
		}
		
		[Column(Storage="_LastArticleId", DbType="Int")]
		public System.Nullable<int> LastArticleId
		{
			get
			{
				return this._LastArticleId;
			}
			set
			{
				if ((this._LastArticleId != value))
				{
					this.OnLastArticleIdChanging(value);
					this.SendPropertyChanging();
					this._LastArticleId = value;
					this.SendPropertyChanged("LastArticleId");
					this.OnLastArticleIdChanged();
				}
			}
		}
		
		[Column(Storage="_GalleryId", DbType="Int")]
		public System.Nullable<int> GalleryId
		{
			get
			{
				return this._GalleryId;
			}
			set
			{
				if ((this._GalleryId != value))
				{
					this.OnGalleryIdChanging(value);
					this.SendPropertyChanging();
					this._GalleryId = value;
					this.SendPropertyChanged("GalleryId");
					this.OnGalleryIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Table_LinksPageBottom")]
	public partial class Table_LinksPageBottom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LinkId;
		
		private string _DispleyText;
		
		private bool _FlagVisible;
		
		private string _AltText;
		
		private string _Url;
		
		private System.Nullable<int> _BottomUrlCatId;
		
		private System.Nullable<int> _OrderPlace;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLinkIdChanging(int value);
    partial void OnLinkIdChanged();
    partial void OnDispleyTextChanging(string value);
    partial void OnDispleyTextChanged();
    partial void OnFlagVisibleChanging(bool value);
    partial void OnFlagVisibleChanged();
    partial void OnAltTextChanging(string value);
    partial void OnAltTextChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnBottomUrlCatIdChanging(System.Nullable<int> value);
    partial void OnBottomUrlCatIdChanged();
    partial void OnOrderPlaceChanging(System.Nullable<int> value);
    partial void OnOrderPlaceChanged();
    #endregion
		
		public Table_LinksPageBottom()
		{
			OnCreated();
		}
		
		[Column(Storage="_LinkId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LinkId
		{
			get
			{
				return this._LinkId;
			}
			set
			{
				if ((this._LinkId != value))
				{
					this.OnLinkIdChanging(value);
					this.SendPropertyChanging();
					this._LinkId = value;
					this.SendPropertyChanged("LinkId");
					this.OnLinkIdChanged();
				}
			}
		}
		
		[Column(Storage="_DispleyText", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DispleyText
		{
			get
			{
				return this._DispleyText;
			}
			set
			{
				if ((this._DispleyText != value))
				{
					this.OnDispleyTextChanging(value);
					this.SendPropertyChanging();
					this._DispleyText = value;
					this.SendPropertyChanged("DispleyText");
					this.OnDispleyTextChanged();
				}
			}
		}
		
		[Column(Storage="_FlagVisible", DbType="Bit NOT NULL")]
		public bool FlagVisible
		{
			get
			{
				return this._FlagVisible;
			}
			set
			{
				if ((this._FlagVisible != value))
				{
					this.OnFlagVisibleChanging(value);
					this.SendPropertyChanging();
					this._FlagVisible = value;
					this.SendPropertyChanged("FlagVisible");
					this.OnFlagVisibleChanged();
				}
			}
		}
		
		[Column(Storage="_AltText", DbType="NVarChar(100)")]
		public string AltText
		{
			get
			{
				return this._AltText;
			}
			set
			{
				if ((this._AltText != value))
				{
					this.OnAltTextChanging(value);
					this.SendPropertyChanging();
					this._AltText = value;
					this.SendPropertyChanged("AltText");
					this.OnAltTextChanged();
				}
			}
		}
		
		[Column(Storage="_Url", DbType="NChar(100)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[Column(Storage="_BottomUrlCatId", DbType="Int")]
		public System.Nullable<int> BottomUrlCatId
		{
			get
			{
				return this._BottomUrlCatId;
			}
			set
			{
				if ((this._BottomUrlCatId != value))
				{
					this.OnBottomUrlCatIdChanging(value);
					this.SendPropertyChanging();
					this._BottomUrlCatId = value;
					this.SendPropertyChanged("BottomUrlCatId");
					this.OnBottomUrlCatIdChanged();
				}
			}
		}
		
		[Column(Storage="_OrderPlace", DbType="Int")]
		public System.Nullable<int> OrderPlace
		{
			get
			{
				return this._OrderPlace;
			}
			set
			{
				if ((this._OrderPlace != value))
				{
					this.OnOrderPlaceChanging(value);
					this.SendPropertyChanging();
					this._OrderPlace = value;
					this.SendPropertyChanged("OrderPlace");
					this.OnOrderPlaceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Table_LinksPrefered")]
	public partial class Table_LinksPrefered : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LinkId;
		
		private System.Nullable<int> _PhotoId;
		
		private System.Nullable<int> _ArticleId;
		
		private string _Url;
		
		private System.Nullable<int> _OrderPlace;
		
		private string _AltText;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLinkIdChanging(int value);
    partial void OnLinkIdChanged();
    partial void OnPhotoIdChanging(System.Nullable<int> value);
    partial void OnPhotoIdChanged();
    partial void OnArticleIdChanging(System.Nullable<int> value);
    partial void OnArticleIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnOrderPlaceChanging(System.Nullable<int> value);
    partial void OnOrderPlaceChanged();
    partial void OnAltTextChanging(string value);
    partial void OnAltTextChanged();
    #endregion
		
		public Table_LinksPrefered()
		{
			OnCreated();
		}
		
		[Column(Storage="_LinkId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LinkId
		{
			get
			{
				return this._LinkId;
			}
			set
			{
				if ((this._LinkId != value))
				{
					this.OnLinkIdChanging(value);
					this.SendPropertyChanging();
					this._LinkId = value;
					this.SendPropertyChanged("LinkId");
					this.OnLinkIdChanged();
				}
			}
		}
		
		[Column(Storage="_PhotoId", DbType="Int")]
		public System.Nullable<int> PhotoId
		{
			get
			{
				return this._PhotoId;
			}
			set
			{
				if ((this._PhotoId != value))
				{
					this.OnPhotoIdChanging(value);
					this.SendPropertyChanging();
					this._PhotoId = value;
					this.SendPropertyChanged("PhotoId");
					this.OnPhotoIdChanged();
				}
			}
		}
		
		[Column(Storage="_ArticleId", DbType="Int")]
		public System.Nullable<int> ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[Column(Storage="_Url", DbType="NChar(150)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[Column(Storage="_OrderPlace", DbType="Int")]
		public System.Nullable<int> OrderPlace
		{
			get
			{
				return this._OrderPlace;
			}
			set
			{
				if ((this._OrderPlace != value))
				{
					this.OnOrderPlaceChanging(value);
					this.SendPropertyChanging();
					this._OrderPlace = value;
					this.SendPropertyChanged("OrderPlace");
					this.OnOrderPlaceChanged();
				}
			}
		}
		
		[Column(Storage="_AltText", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string AltText
		{
			get
			{
				return this._AltText;
			}
			set
			{
				if ((this._AltText != value))
				{
					this.OnAltTextChanging(value);
					this.SendPropertyChanging();
					this._AltText = value;
					this.SendPropertyChanged("AltText");
					this.OnAltTextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Table_Taktzirim")]
	public partial class Table_Taktzirim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TakId;
		
		private int _ArticleId;
		
		private string _TakTitle;
		
		private string _TakContent;
		
		private int _TakTypeId;
		
		private int _PhotoId;
		
		private int _EmbedObjId;
		
		private int _ScheduleId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTakIdChanging(int value);
    partial void OnTakIdChanged();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnTakTitleChanging(string value);
    partial void OnTakTitleChanged();
    partial void OnTakContentChanging(string value);
    partial void OnTakContentChanged();
    partial void OnTakTypeIdChanging(int value);
    partial void OnTakTypeIdChanged();
    partial void OnPhotoIdChanging(int value);
    partial void OnPhotoIdChanged();
    partial void OnEmbedObjIdChanging(int value);
    partial void OnEmbedObjIdChanged();
    partial void OnScheduleIdChanging(int value);
    partial void OnScheduleIdChanged();
    #endregion
		
		public Table_Taktzirim()
		{
			OnCreated();
		}
		
		[Column(Storage="_TakId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TakId
		{
			get
			{
				return this._TakId;
			}
			set
			{
				if ((this._TakId != value))
				{
					this.OnTakIdChanging(value);
					this.SendPropertyChanging();
					this._TakId = value;
					this.SendPropertyChanged("TakId");
					this.OnTakIdChanged();
				}
			}
		}
		
		[Column(Storage="_ArticleId", DbType="Int NOT NULL")]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[Column(Storage="_TakTitle", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string TakTitle
		{
			get
			{
				return this._TakTitle;
			}
			set
			{
				if ((this._TakTitle != value))
				{
					this.OnTakTitleChanging(value);
					this.SendPropertyChanging();
					this._TakTitle = value;
					this.SendPropertyChanged("TakTitle");
					this.OnTakTitleChanged();
				}
			}
		}
		
		[Column(Storage="_TakContent", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string TakContent
		{
			get
			{
				return this._TakContent;
			}
			set
			{
				if ((this._TakContent != value))
				{
					this.OnTakContentChanging(value);
					this.SendPropertyChanging();
					this._TakContent = value;
					this.SendPropertyChanged("TakContent");
					this.OnTakContentChanged();
				}
			}
		}
		
		[Column(Storage="_TakTypeId", DbType="Int NOT NULL")]
		public int TakTypeId
		{
			get
			{
				return this._TakTypeId;
			}
			set
			{
				if ((this._TakTypeId != value))
				{
					this.OnTakTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TakTypeId = value;
					this.SendPropertyChanged("TakTypeId");
					this.OnTakTypeIdChanged();
				}
			}
		}
		
		[Column(Storage="_PhotoId", DbType="Int NOT NULL")]
		public int PhotoId
		{
			get
			{
				return this._PhotoId;
			}
			set
			{
				if ((this._PhotoId != value))
				{
					this.OnPhotoIdChanging(value);
					this.SendPropertyChanging();
					this._PhotoId = value;
					this.SendPropertyChanged("PhotoId");
					this.OnPhotoIdChanged();
				}
			}
		}
		
		[Column(Storage="_EmbedObjId", DbType="Int NOT NULL")]
		public int EmbedObjId
		{
			get
			{
				return this._EmbedObjId;
			}
			set
			{
				if ((this._EmbedObjId != value))
				{
					this.OnEmbedObjIdChanging(value);
					this.SendPropertyChanging();
					this._EmbedObjId = value;
					this.SendPropertyChanged("EmbedObjId");
					this.OnEmbedObjIdChanged();
				}
			}
		}
		
		[Column(Storage="_ScheduleId", DbType="Int NOT NULL")]
		public int ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Table_Broadcast")]
	public partial class Table_Broadcast : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _StartDateTime;
		
		private bool _isRecursive;
		
		private bool _isDaily;
		
		private bool _isWeekly;
		
		private bool _isMonthly;
		
		private bool _isYearly;
		
		private int _DurationHours;
		
		private int _TakId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStartDateTimeChanging(System.DateTime value);
    partial void OnStartDateTimeChanged();
    partial void OnisRecursiveChanging(bool value);
    partial void OnisRecursiveChanged();
    partial void OnisDailyChanging(bool value);
    partial void OnisDailyChanged();
    partial void OnisWeeklyChanging(bool value);
    partial void OnisWeeklyChanged();
    partial void OnisMonthlyChanging(bool value);
    partial void OnisMonthlyChanged();
    partial void OnisYearlyChanging(bool value);
    partial void OnisYearlyChanged();
    partial void OnDurationHoursChanging(int value);
    partial void OnDurationHoursChanged();
    partial void OnTakIdChanging(int value);
    partial void OnTakIdChanged();
    #endregion
		
		public Table_Broadcast()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_StartDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this.OnStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartDateTime = value;
					this.SendPropertyChanged("StartDateTime");
					this.OnStartDateTimeChanged();
				}
			}
		}

        public long StartTicks
        {
            get
            {
                return _StartDateTime.Ticks;
            }
        }

		[Column(Storage="_isRecursive", DbType="Bit NOT NULL")]
		public bool isRecursive
		{
			get
			{
				return this._isRecursive;
			}
			set
			{
				if ((this._isRecursive != value))
				{
					this.OnisRecursiveChanging(value);
					this.SendPropertyChanging();
					this._isRecursive = value;
					this.SendPropertyChanged("isRecursive");
					this.OnisRecursiveChanged();
				}
			}
		}
		
		[Column(Storage="_isDaily", DbType="Bit NOT NULL")]
		public bool isDaily
		{
			get
			{
				return this._isDaily;
			}
			set
			{
				if ((this._isDaily != value))
				{
					this.OnisDailyChanging(value);
					this.SendPropertyChanging();
					this._isDaily = value;
					this.SendPropertyChanged("isDaily");
					this.OnisDailyChanged();
				}
			}
		}
		
		[Column(Storage="_isWeekly", DbType="Bit NOT NULL")]
		public bool isWeekly
		{
			get
			{
				return this._isWeekly;
			}
			set
			{
				if ((this._isWeekly != value))
				{
					this.OnisWeeklyChanging(value);
					this.SendPropertyChanging();
					this._isWeekly = value;
					this.SendPropertyChanged("isWeekly");
					this.OnisWeeklyChanged();
				}
			}
		}
		
		[Column(Storage="_isMonthly", DbType="Bit NOT NULL")]
		public bool isMonthly
		{
			get
			{
				return this._isMonthly;
			}
			set
			{
				if ((this._isMonthly != value))
				{
					this.OnisMonthlyChanging(value);
					this.SendPropertyChanging();
					this._isMonthly = value;
					this.SendPropertyChanged("isMonthly");
					this.OnisMonthlyChanged();
				}
			}
		}
		
		[Column(Storage="_isYearly", DbType="Bit NOT NULL")]
		public bool isYearly
		{
			get
			{
				return this._isYearly;
			}
			set
			{
				if ((this._isYearly != value))
				{
					this.OnisYearlyChanging(value);
					this.SendPropertyChanging();
					this._isYearly = value;
					this.SendPropertyChanged("isYearly");
					this.OnisYearlyChanged();
				}
			}
		}
		
		[Column(Storage="_DurationHours", DbType="Int NOT NULL")]
		public int DurationHours
		{
			get
			{
				return this._DurationHours;
			}
			set
			{
				if ((this._DurationHours != value))
				{
					this.OnDurationHoursChanging(value);
					this.SendPropertyChanging();
					this._DurationHours = value;
					this.SendPropertyChanged("DurationHours");
					this.OnDurationHoursChanged();
				}
			}
		}
		
		[Column(Storage="_TakId", DbType="Int NOT NULL")]
		public int TakId
		{
			get
			{
				return this._TakId;
			}
			set
			{
				if ((this._TakId != value))
				{
					this.OnTakIdChanging(value);
					this.SendPropertyChanging();
					this._TakId = value;
					this.SendPropertyChanged("TakId");
					this.OnTakIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Table_LookupTakTypes")]
	public partial class Table_LookupTakType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Description;
		
		private System.Nullable<int> _Width;
		
		private System.Nullable<int> _Height;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnWidthChanging(System.Nullable<int> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    #endregion
		
		public Table_LookupTakType()
		{
			OnCreated();
		}
		
		[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_Width", DbType="Int")]
		public System.Nullable<int> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[Column(Storage="_Height", DbType="Int")]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
