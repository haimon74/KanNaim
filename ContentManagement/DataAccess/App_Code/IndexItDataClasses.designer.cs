#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[System.Data.Linq.Mapping.DatabaseAttribute(Name = "inochi74")]
public partial class IndexItDataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertTable_Menus(Table_Menus instance);
  partial void UpdateTable_Menus(Table_Menus instance);
  partial void DeleteTable_Menus(Table_Menus instance);
  #endregion
	
	public IndexItDataClassesDataContext() : 
			//base(global::System.Configuration.ConfigurationManager.ConnectionStrings["_10infoConnectionString"].ConnectionString, mappingSource)
      base(global::DataAccess.Properties.Settings.Default.inochi74ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public IndexItDataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public IndexItDataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public IndexItDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public IndexItDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Table_Menus> Table_Menus
	{
		get
		{
			return this.GetTable<Table_Menus>();
		}
	}
	
	public System.Data.Linq.Table<Table_LookupMenus> Table_LookupMenus
	{
		get
		{
			return this.GetTable<Table_LookupMenus>();
		}
	}
}

[Table(Name="dbo.Table_Menus")]
public partial class Table_Menus : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MenuId;
	
	private int _ItemId;
	
	private int _ParentId;
	
	private string _DisplayText;
	
	private string _ToolTip;
	
	private string _OnClickUrl;
	
	private string _CssClassName;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIdChanging(int value);
    partial void OnMenuIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnParentIdChanging(int value);
    partial void OnParentIdChanged();
    partial void OnDisplayTextChanging(string value);
    partial void OnDisplayTextChanged();
    partial void OnToolTipChanging(string value);
    partial void OnToolTipChanged();
    partial void OnOnClickUrlChanging(string value);
    partial void OnOnClickUrlChanged();
    partial void OnCssClassNameChanging(string value);
    partial void OnCssClassNameChanged();
    #endregion
	
	public Table_Menus()
	{
		OnCreated();
	}
	
	[Column(Storage="_MenuId", DbType="Int NOT NULL")]
	public int MenuId
	{
		get
		{
			return this._MenuId;
		}
		set
		{
			if ((this._MenuId != value))
			{
				this.OnMenuIdChanging(value);
				this.SendPropertyChanging();
				this._MenuId = value;
				this.SendPropertyChanged("MenuId");
				this.OnMenuIdChanged();
			}
		}
	}
	
	[Column(Storage="_ItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ItemId
	{
		get
		{
			return this._ItemId;
		}
		set
		{
			if ((this._ItemId != value))
			{
				this.OnItemIdChanging(value);
				this.SendPropertyChanging();
				this._ItemId = value;
				this.SendPropertyChanged("ItemId");
				this.OnItemIdChanged();
			}
		}
	}
	
	[Column(Storage="_ParentId", DbType="Int NOT NULL")]
	public int ParentId
	{
		get
		{
			return this._ParentId;
		}
		set
		{
			if ((this._ParentId != value))
			{
				this.OnParentIdChanging(value);
				this.SendPropertyChanging();
				this._ParentId = value;
				this.SendPropertyChanged("ParentId");
				this.OnParentIdChanged();
			}
		}
	}
	
	[Column(Storage="_DisplayText", DbType="NChar(20) NOT NULL", CanBeNull=false)]
	public string DisplayText
	{
		get
		{
			return this._DisplayText;
		}
		set
		{
			if ((this._DisplayText != value))
			{
				this.OnDisplayTextChanging(value);
				this.SendPropertyChanging();
				this._DisplayText = value;
				this.SendPropertyChanged("DisplayText");
				this.OnDisplayTextChanged();
			}
		}
	}
	
	[Column(Storage="_ToolTip", DbType="NChar(100)")]
	public string ToolTip
	{
		get
		{
			return this._ToolTip;
		}
		set
		{
			if ((this._ToolTip != value))
			{
				this.OnToolTipChanging(value);
				this.SendPropertyChanging();
				this._ToolTip = value;
				this.SendPropertyChanged("ToolTip");
				this.OnToolTipChanged();
			}
		}
	}
	
	[Column(Storage="_OnClickUrl", DbType="NChar(200)")]
	public string OnClickUrl
	{
		get
		{
			return this._OnClickUrl;
		}
		set
		{
			if ((this._OnClickUrl != value))
			{
				this.OnOnClickUrlChanging(value);
				this.SendPropertyChanging();
				this._OnClickUrl = value;
				this.SendPropertyChanged("OnClickUrl");
				this.OnOnClickUrlChanged();
			}
		}
	}
	
	[Column(Storage="_CssClassName", DbType="NChar(50)")]
	public string CssClassName
	{
		get
		{
			return this._CssClassName;
		}
		set
		{
			if ((this._CssClassName != value))
			{
				this.OnCssClassNameChanging(value);
				this.SendPropertyChanging();
				this._CssClassName = value;
				this.SendPropertyChanged("CssClassName");
				this.OnCssClassNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.Table_LookupMenus")]
public partial class Table_LookupMenus
{
	
	private int _MenuId;
	
	private string _MenuDescription;
	
	public Table_LookupMenus()
	{
	}
    [Column(Storage = "_MenuId", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
	public int MenuId
	{
		get
		{
			return this._MenuId;
		}
		set
		{
			if ((this._MenuId != value))
			{
				this._MenuId = value;
			}
		}
	}
	
	[Column(Storage="_MenuDescription", DbType="NChar(100) NOT NULL", CanBeNull=false)]
	public string MenuDescription
	{
		get
		{
			return this._MenuDescription;
		}
		set
		{
			if ((this._MenuDescription != value))
			{
				this._MenuDescription = value;
			}
		}
	}
}
#pragma warning restore 1591
